{
  "_args": [
    [
      {
        "raw": "colorette@^1.2.1",
        "scope": null,
        "escapedName": "colorette",
        "name": "colorette",
        "rawSpec": "^1.2.1",
        "spec": ">=1.2.1 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\autoprefixer"
    ]
  ],
  "_from": "colorette@^1.2.1",
  "_hasShrinkwrap": false,
  "_id": "colorette@1.2.1",
  "_location": "/colorette",
  "_nodeVersion": "14.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/colorette_1.2.1_1593955998082_0.6836392249584926"
  },
  "_npmUser": {
    "name": "jorgebucaran",
    "email": "mail@jorgebucaran.com"
  },
  "_npmVersion": "6.14.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "colorette@^1.2.1",
    "scope": null,
    "escapedName": "colorette",
    "name": "colorette",
    "rawSpec": "^1.2.1",
    "spec": ">=1.2.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/autoprefixer"
  ],
  "_resolved": "https://registry.npmjs.org/colorette/-/colorette-1.2.1.tgz",
  "_shasum": "4d0b921325c14faf92633086a536db6e89564b1b",
  "_shrinkwrap": null,
  "_spec": "colorette@^1.2.1",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\autoprefixer",
  "author": {
    "name": "Jorge Bucaran"
  },
  "bugs": {
    "url": "https://github.com/jorgebucaran/colorette/issues"
  },
  "dependencies": {},
  "description": "Color your terminal using pure idiomatic JavaScript.",
  "devDependencies": {
    "c8": "7.2.0",
    "testmatrix": "0.1.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-puCDz0CzydiSYOrnXpz/PKd69zRrribezjtE9yd4zvytoRc8+RY/KJPvtPFKZS3E3wP6neGyMe0vOTlHO5L3Pw==",
    "shasum": "4d0b921325c14faf92633086a536db6e89564b1b",
    "tarball": "https://registry.npmjs.org/colorette/-/colorette-1.2.1.tgz",
    "fileCount": 6,
    "unpackedSize": 11788,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfAdaeCRA9TVsSAnZWagAAI1MP/Aij/C7R31opfbyZ8hn0\noUYxxdH+auCy13NmaaxC5Q5iuRwpsKm5wdg/QbUv87VUcwbWwYPMm7LpTS+y\n5aZ5R+nziKVHtrX9GfYoLLeOSaG2eJHglixBm64DF4lfvJAXjiH5ZP2AYZOr\nDpDZyTUDma7D3muK+LGhy8FMh2e+lOO6cdOVUGvT+n+kxpOS6rc9uyxTxe96\niNOfv9VpiaKld1tA6nWqswakNb9dTm2guamrgwn9nAmKMHTvwkPtEZSbhf6H\nDE5rjQZK5Ra3kWILmufft557psYvYSzj/4YFjqMdn2EdjiH1DApIRipNCpN9\nWOYvY4cXGe5I2hVW96pWYSnaFnK9BEqGFsV0KEOG0vVmlYg81wbt6+Yn8+rV\nfgIUSrnxnWjqVcvJxCuZ/xhbEGzs/1Shb3dmb5OLGWFba2IVuAwDC3A5HuLT\n6QXoUeeId8DGaz1Px6bB7CPyW+AKadATOyfv5PF9Zq8nxyRU13VAxg72U8+o\n4PCyuBJ65R8arSfTUaXI5Zl8aLFEQCIyxsSE4Kkz+YB+xKC3b5AQV43ft4Pl\nA5YHcPKpryNHDDMS6pbhIGJBMkaGSqDhGVlvWI8xP3m+hBhiod7J6QnHIKzP\n8vc1DJfy/AH5Oz92RYH7n3KB7bKWkGuGW29oVCHZbHzAsdKKLpId7eWAFj2w\nzeqn\r\n=1x39\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "exports": {
    "./package.json": "./package.json",
    ".": {
      "require": "./index.cjs",
      "import": "./index.js"
    }
  },
  "files": [
    "index.*",
    "colorette.d.ts"
  ],
  "gitHead": "c5b8a001b7c0202752048bdf4afb9a9142dcf7e9",
  "homepage": "https://github.com/jorgebucaran/colorette",
  "keywords": [
    "colorette",
    "terminal",
    "styles",
    "color",
    "ansi"
  ],
  "license": "MIT",
  "main": "index.cjs",
  "maintainers": [
    {
      "name": "jorgebucaran",
      "email": "mail@jorgebucaran.com"
    }
  ],
  "module": "index.js",
  "name": "colorette",
  "optionalDependencies": {},
  "readme": "# Colorette [![](https://img.shields.io/npm/v/colorette.svg?label=&color=2a64e6)](https://www.npmjs.org/package/colorette)\n\n> Color your terminal using pure idiomatic JavaScript.\n\nColorette is a Node.js library for embellishing your CLI tools with colors and styles using [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code).\n\n- ~1.5x faster than alternatives ([run the benchmarks](#run-the-benchmarks)).\n- No wonky prototype-based method chains.\n- Automatic color support detection.\n- ~80 LOC and no dependencies.\n- [`NO_COLOR`](https://no-color.org) friendly.\n\n## Quickstart\n\n```console\nnpm i colorette\n```\n\nImport the [styles](#styles) you need. [Here](#supported-styles)'s the list of styles you can use.\n\n```js\nimport { red, blue, bold } from \"colorette\"\n```\n\nWrap your strings in one or more styles to produce the finish you're looking for.\n\n```js\nconsole.log(bold(blue(\"Engage!\")))\n```\n\nMix it with [template literals](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals) to interpolate variables, expressions and create multi-line strings easily.\n\n```js\nconsole.log(`\n  Beets are ${red(\"red\")},\n  Plums are ${blue(\"blue\")},\n  ${bold(\"Colorette!\")}.\n`)\n```\n\nUsing `console.log`'s [string substitution](https://nodejs.org/api/console.html#console_console_log_data_args) can be useful too.\n\n```js\nconsole.log(bold(\"Total: $%f\"), 1.99)\n```\n\nYou can also nest styles without breaking existing escape codes.\n\n```js\nconsole.log(red(`Red Shirt ${blue(\"Blue Shirt\")} Red Shirt`))\n```\n\nFeeling adventurous? Try the [pipeline operator](https://github.com/tc39/proposal-pipeline-operator).\n\n```js\nconsole.log(\"Make it so!\" |> bold |> blue)\n```\n\n## Supported styles\n\nColorette supports the standard and bright color variations out-of-the-box. See [this issue](https://github.com/jorgebucaran/colorette/issues/27) if you were looking for TrueColor support.\n\n| Colors  | Background Colors | Bright Colors | Bright Background Colors | Modifiers         |\n| ------- | ----------------- | ------------- | ------------------------ | ----------------- |\n| black   | bgBlack           | blackBright   | bgBlackBright            | dim               |\n| red     | bgRed             | redBright     | bgRedBright              | **bold**          |\n| green   | bgGreen           | greenBright   | bgGreenBright            | hidden            |\n| yellow  | bgYellow          | yellowBright  | bgYellowBright           | _italic_          |\n| blue    | bgBlue            | blueBright    | bgBlueBright             | underline         |\n| magenta | bgMagenta         | magentaBright | bgMagentaBright          | ~~strikethrough~~ |\n| cyan    | bgCyan            | cyanBright    | bgCyanBright             | reset             |\n| white   | bgWhite           | whiteBright   | bgWhiteBright            |                   |\n| gray    |                   |               |                          |                   |\n\n## API\n\n### <code><i>style</i>(string)</code>\n\nReturns a string wrapped in the corresponding ANSI escape codes.\n\n```js\nred(\"Red Alert\") //=> \\u001b[31mRed Alert\\u001b[39m\n```\n\n### `options.enabled`\n\nColor will be enabled if your terminal supports it, `FORCE_COLOR` is defined in [`process.env`](https://nodejs.org/dist/latest-v8.x/docs/api/process.html#process_process_env) and if `NO_COLOR` isn't, but you can always override it if you want.\n\n```js\nimport { options } from \"colorette\"\n\noptions.enabled = false\n```\n\n## Run the benchmarks\n\n```\nnpm i -C bench && node bench\n```\n\n<pre>\ncolorette × 759,429 ops/sec\nchalk × 524,034 ops/sec\nkleur × 490,347 ops/sec\ncolors × 255,661 ops/sec\nansi-colors × 317,605 ops/sec\n</pre>\n\n## License\n\n[MIT](LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jorgebucaran/colorette.git"
  },
  "scripts": {
    "build": "node -e \"fs.writeFileSync('index.cjs',fs.readFileSync('index.js','utf8').replace(/export const /g,'exports.'),'utf8')\"",
    "release": "v=$npm_package_version; git commit -am $v && git tag -s $v -m $v && git push && git push --tags && npm publish",
    "test": "c8 testmatrix test/*.cjs"
  },
  "type": "module",
  "types": "colorette.d.ts",
  "version": "1.2.1"
}

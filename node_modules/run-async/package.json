{
  "_args": [
    [
      {
        "raw": "run-async@^2.4.0",
        "scope": null,
        "escapedName": "run-async",
        "name": "run-async",
        "rawSpec": "^2.4.0",
        "spec": ">=2.4.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\inquirer"
    ]
  ],
  "_from": "run-async@^2.4.0",
  "_hasShrinkwrap": false,
  "_id": "run-async@2.4.1",
  "_location": "/run-async",
  "_nodeVersion": "12.16.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/run-async_2.4.1_1587966009268_0.1932416029427002"
  },
  "_npmUser": {
    "name": "sboudrias",
    "email": "admin@simonboudrias.com"
  },
  "_npmVersion": "6.13.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "run-async@^2.4.0",
    "scope": null,
    "escapedName": "run-async",
    "name": "run-async",
    "rawSpec": "^2.4.0",
    "spec": ">=2.4.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/inquirer"
  ],
  "_resolved": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
  "_shasum": "8440eccf99ea3e70bd409d49aab88e10c189a455",
  "_shrinkwrap": null,
  "_spec": "run-async@^2.4.0",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\inquirer",
  "author": {
    "name": "Simon Boudrias",
    "email": "admin@simonboudrias.com"
  },
  "bugs": {
    "url": "https://github.com/SBoudrias/run-async/issues"
  },
  "dependencies": {},
  "description": "Utility method to run function either synchronously or asynchronously using the common `this.async()` style.",
  "devDependencies": {
    "mocha": "^7.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-tvVnVv01b8c1RrA6Ep7JkStj85Guv/YrMcwqYQnwjsAS2cTmmPGBBjAjpCW7RrSodNSoE2/qg9O4bceNvUuDgQ==",
    "shasum": "8440eccf99ea3e70bd409d49aab88e10c189a455",
    "tarball": "https://registry.npmjs.org/run-async/-/run-async-2.4.1.tgz",
    "fileCount": 4,
    "unpackedSize": 6604,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJepnA5CRA9TVsSAnZWagAAWkUP/ioFe+TOHso6jPzihreo\nMoQTLB0+I4coYc642azZ1t306nHsj8m5Ts4JZiWaiTOq3HGY58yzNDINWi06\nsG1hIRL5f1D323sq6d+Ec5H/81qCDGNXFTzDKAVPLdsQCnHiTfcmYgv2C8UD\nDPR3gmTujpONC5S1iIhGXZAcEJFYNVnep6KPs/7UNMxlEP/bnMaWh2oLQg/Q\nllZFcBWh/mGnqO/6o9JshJsO2n6paFb5kuPsc36Atioqiix4QCRn9KG7rEty\n02JXaTOUAmqXeKnEsnKYwK77h2I6mkDrgNz29rDqzJmVmTxFqbGbuxU980Yb\nd4IU+4X/w6USQRjhT6IzRsfwe2EQpJ+39BZblYBlogwt7137DyOzXAAjWaVr\n6x6EeisqUViwmmw4JJn9jspI67GcQD6eE07NYydWNVKGMA5rRl0kaS7f6m6d\ntZlBUggMn3SKMZQmeTiXSK7OukwMlPKURv8G1DpBgYbtdK1ZF9s3Y4o54T+y\nQRzW6na4sKWueC90iBq6a5plYRFOhUMHkvng8YD/8bdG9GMv/ooWkWJOwjbK\n0lGZd4WvDkFGxXA+ASxQUY+rkNhm1nyX6a1UnhiOXJMcvIs3v53mbPwn5UmD\n+2kUIA04LY8OM1p6Pg7p8xp2vUrbuN+r8vwgGrO5pJoYk8plyNBivJr8WYGv\n6AAa\r\n=F96P\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.12.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "f3e0a18abf6e9569abfcf327daa9351c95f109b1",
  "homepage": "https://github.com/SBoudrias/run-async#readme",
  "keywords": [
    "flow",
    "flow-control",
    "async"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "sboudrias",
      "email": "admin@simonboudrias.com"
    }
  ],
  "name": "run-async",
  "optionalDependencies": {},
  "readme": "Run Async\n=========\n\n[![npm](https://badge.fury.io/js/run-async.svg)](http://badge.fury.io/js/run-async) [![tests](https://travis-ci.org/SBoudrias/run-async.svg?branch=master)](http://travis-ci.org/SBoudrias/run-async) [![dependencies](https://david-dm.org/SBoudrias/run-async.svg?theme=shields.io)](https://david-dm.org/SBoudrias/run-async)\n\nUtility method to run a function either synchronously or asynchronously using a series of common patterns. This is useful for library author accepting sync or async functions as parameter. `runAsync` will always run them as an async method, and normalize the multiple signature.\n\nInstallation\n=========\n\n```bash\nnpm install --save run-async\n```\n\nUsage\n=========\n\nHere's a simple example print the function results and three options a user can provide a function.\n\n```js\nvar runAsync = require('run-async');\n\nvar printAfter = function (func) {\n  var cb = function (err, returnValue) {\n    console.log(returnValue);\n  };\n  runAsync(func, cb)(/* arguments for func */);\n};\n```\n\n#### Using `this.async`\n```js\nprintAfter(function () {\n  var done = this.async();\n\n  setTimeout(function () {\n    done(null, 'done running with callback');\n  }, 10);\n});\n```\n\n#### Returning a promise\n```js\nprintAfter(function () {\n  return new Promise(function (resolve, reject) {\n    resolve('done running with promises');\n  });\n});\n```\n\n#### Synchronous function\n```js\nprintAfter(function () {\n  return 'done running sync function';\n});\n```\n\n### runAsync.cb\n\n`runAsync.cb` supports all the function types that `runAsync` does and additionally a traditional **callback as the last argument** signature:\n\n```js\nvar runAsync = require('run-async');\n\n// IMPORTANT: The wrapped function must have a fixed number of parameters.\nrunAsync.cb(function(a, b, cb) {\n  cb(null, a + b);\n}, function(err, result) {\n  console.log(result)\n})(1, 2)\n```\n\nIf your version of node support Promises natively (node >= 0.12), `runAsync` will return a promise. Example: `runAsync(func)(arg1, arg2).then(cb)`\n\nLicence\n========\n\nCopyright (c) 2014 Simon Boudrias (twitter: @vaxilart)  \nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/SBoudrias/run-async.git"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "version": "2.4.1"
}

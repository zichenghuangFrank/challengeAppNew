{
  "_args": [
    [
      {
        "raw": "cache-loader@^4.1.0",
        "scope": null,
        "escapedName": "cache-loader",
        "name": "cache-loader",
        "rawSpec": "^4.1.0",
        "spec": ">=4.1.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-plugin-babel"
    ]
  ],
  "_from": "cache-loader@^4.1.0",
  "_hasShrinkwrap": false,
  "_id": "cache-loader@4.1.0",
  "_location": "/cache-loader",
  "_nodeVersion": "10.15.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cache-loader_4.1.0_1563455963384_0.1536289880950128"
  },
  "_npmUser": {
    "name": "evilebottnawi",
    "email": "sheo13666q@gmail.com"
  },
  "_npmVersion": "6.10.1",
  "_phantomChildren": {
    "commondir": "1.0.1",
    "p-limit": "2.3.0"
  },
  "_requested": {
    "raw": "cache-loader@^4.1.0",
    "scope": null,
    "escapedName": "cache-loader",
    "name": "cache-loader",
    "rawSpec": "^4.1.0",
    "spec": ">=4.1.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-plugin-babel",
    "/@vue/cli-service"
  ],
  "_resolved": "https://registry.npmjs.org/cache-loader/-/cache-loader-4.1.0.tgz",
  "_shasum": "9948cae353aec0a1fcb1eafda2300816ec85387e",
  "_shrinkwrap": null,
  "_spec": "cache-loader@^4.1.0",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-plugin-babel",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/cache-loader/issues"
  },
  "dependencies": {
    "buffer-json": "^2.0.0",
    "find-cache-dir": "^3.0.0",
    "loader-utils": "^1.2.3",
    "mkdirp": "^0.5.1",
    "neo-async": "^2.6.1",
    "schema-utils": "^2.0.0"
  },
  "description": "Caches the result of following loaders on disk.",
  "devDependencies": {
    "@babel/cli": "^7.5.5",
    "@babel/core": "^7.5.5",
    "@babel/preset-env": "^7.5.5",
    "@commitlint/cli": "^8.1.0",
    "@commitlint/config-conventional": "^8.1.0",
    "@webpack-contrib/defaults": "^5.0.2",
    "@webpack-contrib/eslint-config-webpack": "^3.0.0",
    "babel-jest": "^24.8.0",
    "babel-loader": "^8.0.6",
    "commitlint-azure-pipelines-cli": "^1.0.2",
    "cross-env": "^5.2.0",
    "del": "^5.0.0",
    "del-cli": "^2.0.0",
    "eslint": "^6.0.1",
    "eslint-config-prettier": "^6.0.0",
    "eslint-plugin-import": "^2.18.0",
    "file-loader": "^4.1.0",
    "husky": "^3.0.0",
    "jest": "^24.8.0",
    "jest-junit": "^6.4.0",
    "lint-staged": "^9.2.0",
    "memory-fs": "^0.4.1",
    "normalize-path": "^3.0.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.18.2",
    "standard-version": "^6.0.1",
    "uuid": "^3.3.2",
    "webpack": "^4.36.1",
    "webpack-cli": "^3.3.6"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ftOayxve0PwKzBF/GLsZNC9fJBXl8lkZE3TOsjkboHfVHVkL39iUEs1FO07A33mizmci5Dudt38UZrrYXDtbhw==",
    "shasum": "9948cae353aec0a1fcb1eafda2300816ec85387e",
    "tarball": "https://registry.npmjs.org/cache-loader/-/cache-loader-4.1.0.tgz",
    "fileCount": 7,
    "unpackedSize": 27426,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdMHHcCRA9TVsSAnZWagAA14sQAI+TjktuGhhpiOZuebtT\n7zghINaHroY8mJOKGBF3FW0rZTEFzC/AbMc8YmSsGGoPh579yNtuNI8Qweu3\nAH5e3Wj/OgXfgDzRkH6THYyvuMAY078jVURF0gpP1bg+qQu2UlWOcA9mhvrV\nM9J437usQHDq03jx0IzeLCwPU2qXoX2ASLcvWWgRkFZ9x2udw4RZdKmTeYpd\nY+lTW9v+O5GZDQXsJ0AdoTa/NzSntiHyzNKP5lqK6lUQYEoTiybcI+rKB9ZV\n8bK04cF3ISVJkhRNxKHU3A+uL25zfALrhWKnU1fRu20RD+OMXAX+XOo7RUNS\nekBCQn8bpuw2nTTlI0LOKAs6ZaP/E5xme7hH2NinKo7NNRndIhwC7kivzQkX\nZa4zqaTU8uGQTTE2g2sxdtMnLj6QZPW9v0KrCQFM958JezBvshFEj/jVWofc\n3ayCbPq5obXOskjEr5W10sqO/jhZsbhU6kk6XSsI8r26t2ksd2TNUh9nC3EL\nsYGKTTnU272H3WqD3hnOmxSjzE7FBocWvN4AvOnrvX+JCEF6KnJqx4lftKYZ\nAjlCD4GzDTO8ucum9zKnnPJKgKrcS6uBXQN+vcYS0eQvBTRSSy+415gB7uad\n4MLgVM9JdTG7BtZX/Gq1ikrYiJuB2iyCWW/CAKCI/VYTbdzOaIsDaw+t3FDF\nXJDJ\r\n=7KyZ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8.9.0"
  },
  "files": [
    "dist"
  ],
  "gitHead": "3371562bc05c645dcd20e851ec6c0cc82387fd7f",
  "homepage": "https://github.com/webpack-contrib/cache-loader",
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "cache-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.0.0"
  },
  "readme": "<div align=\"center\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# cache-loader\n\nThe `cache-loader` allow to Caches the result of following loaders on disk (default) or in the database.\n\n## Getting Started\n\nTo begin, you'll need to install `cache-loader`:\n\n```console\nnpm install --save-dev cache-loader\n```\n\nAdd this loader in front of other (expensive) loaders to cache the result on disk.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.ext$/,\n        use: ['cache-loader', ...loaders],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n> ⚠️ Note that there is an overhead for saving the reading and saving the cache file, so only use this loader to cache expensive loaders.\n\n## Options\n\n|         Name          |                       Type                       |                        n Default                        | Description                                                                                                                                                            |\n| :-------------------: | :----------------------------------------------: | :-----------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|  **`cacheContext`**   |                    `{String}`                    |                       `undefined`                       | Allows you to override the default cache context in order to generate the cache relatively to a path. By default it will use absolute paths                            |\n|    **`cacheKey`**     |    `{Function(options, request) -> {String}}`    |                       `undefined`                       | Allows you to override default cache key generator                                                                                                                     |\n| **`cacheDirectory`**  |                    `{String}`                    | `findCacheDir({ name: 'cache-loader' }) or os.tmpdir()` | Provide a cache directory where cache items should be stored (used for default read/write implementation)                                                              |\n| **`cacheIdentifier`** |                    `{String}`                    |     `cache-loader:{version} {process.env.NODE_ENV}`     | Provide an invalidation identifier which is used to generate the hashes. You can use it for extra dependencies of loaders (used for default read/write implementation) |\n|     **`compare`**     |      `{Function(stats, dep) -> {Boolean}}`       |                       `undefined`                       | Allows you to override default comparison function between the cached dependency and the one is being read. Return `true` to use the cached resource                   |\n|    **`precision`**    |                    `{Number}`                    |                           `0`                           | Round `mtime` by this number of milliseconds both for `stats` and `dep` before passing those params to the comparing function                                          |\n|      **`read`**       |    `{Function(cacheKey, callback) -> {void}}`    |                       `undefined`                       | Allows you to override default read cache data from file                                                                                                               |\n|    **`readOnly`**     |                   `{Boolean}`                    |                         `false`                         | Allows you to override default value and make the cache read only (useful for some environments where you don't want the cache to be updated, only read from it)       |\n|      **`write`**      | `{Function(cacheKey, data, callback) -> {void}}` |                       `undefined`                       | Allows you to override default write cache data to file (e.g. Redis, memcached)                                                                                        |\n\n## Examples\n\n### Basic\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: ['cache-loader', 'babel-loader'],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n### Database Integration\n\n**webpack.config.js**\n\n```js\n// Or different database client - memcached, mongodb, ...\nconst redis = require('redis');\nconst crypto = require('crypto');\n\n// ...\n// connect to client\n// ...\n\nconst BUILD_CACHE_TIMEOUT = 24 * 3600; // 1 day\n\nfunction digest(str) {\n  return crypto\n    .createHash('md5')\n    .update(str)\n    .digest('hex');\n}\n\n// Generate own cache key\nfunction cacheKey(options, request) {\n  return `build:cache:${digest(request)}`;\n}\n\n// Read data from database and parse them\nfunction read(key, callback) {\n  client.get(key, (err, result) => {\n    if (err) {\n      return callback(err);\n    }\n\n    if (!result) {\n      return callback(new Error(`Key ${key} not found`));\n    }\n\n    try {\n      let data = JSON.parse(result);\n      callback(null, data);\n    } catch (e) {\n      callback(e);\n    }\n  });\n}\n\n// Write data to database under cacheKey\nfunction write(key, data, callback) {\n  client.set(key, JSON.stringify(data), 'EX', BUILD_CACHE_TIMEOUT, callback);\n}\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        use: [\n          {\n            loader: 'cache-loader',\n            options: {\n              cacheKey,\n              read,\n              write,\n            },\n          },\n          'babel-loader',\n        ],\n        include: path.resolve('src'),\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/cache-loader.svg\n[npm-url]: https://npmjs.com/package/cache-loader\n[node]: https://img.shields.io/node/v/cache-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/cache-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/cache-loader\n[tests]: https://dev.azure.com/webpack-contrib/cache-loader/_apis/build/status/webpack-contrib.cache-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/cache-loader/_build/latest?definitionId=4&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/cache-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/cache-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=cache-loader\n[size-url]: https://packagephobia.now.sh/result?p=cache-loader\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/cache-loader.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore \"src/**/*.test.js\" --copy-files",
    "clean": "del-cli dist",
    "commitlint": "commitlint --from=master",
    "defaults": "webpack-defaults",
    "lint": "npm-run-all -l -p \"lint:**\"",
    "lint:js": "eslint --cache src test",
    "lint:prettier": "prettier \"{**/*,*}.{js,json,md,yml,css}\" --list-different",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "pretest": "npm run lint",
    "release": "standard-version",
    "security": "npm audit",
    "start": "npm run build -- -w",
    "test": "cross-env NODE_ENV=test npm run test:coverage",
    "test:coverage": "cross-env NODE_ENV=test jest --collectCoverageFrom=\"src/**/*.js\" --coverage",
    "test:only": "cross-env NODE_ENV=test jest",
    "test:watch": "cross-env NODE_ENV=test jest --watch"
  },
  "version": "4.1.0"
}

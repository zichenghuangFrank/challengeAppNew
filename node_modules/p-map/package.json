{
  "_args": [
    [
      {
        "raw": "p-map@^3.0.0",
        "scope": null,
        "escapedName": "p-map",
        "name": "p-map",
        "rawSpec": "^3.0.0",
        "spec": ">=3.0.0 <4.0.0",
        "type": "range"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-service\\node_modules\\cacache"
    ]
  ],
  "_from": "p-map@^3.0.0",
  "_hasShrinkwrap": false,
  "_id": "p-map@3.0.0",
  "_location": "/p-map",
  "_nodeVersion": "12.6.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/p-map_3.0.0_1563032855528_0.7953198023305246"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "p-map@^3.0.0",
    "scope": null,
    "escapedName": "p-map",
    "name": "p-map",
    "rawSpec": "^3.0.0",
    "spec": ">=3.0.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-service/cacache"
  ],
  "_resolved": "https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz",
  "_shasum": "d704d9af8a2ba684e2600d9a215983d4141a979d",
  "_shrinkwrap": null,
  "_spec": "p-map@^3.0.0",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-service\\node_modules\\cacache",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/p-map/issues"
  },
  "dependencies": {
    "aggregate-error": "^3.0.0"
  },
  "description": "Map over promises concurrently",
  "devDependencies": {
    "ava": "^2.2.0",
    "delay": "^4.1.0",
    "in-range": "^2.0.0",
    "random-int": "^2.0.0",
    "time-span": "^3.1.0",
    "tsd": "^0.7.2",
    "xo": "^0.24.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==",
    "shasum": "d704d9af8a2ba684e2600d9a215983d4141a979d",
    "tarball": "https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz",
    "fileCount": 5,
    "unpackedSize": 8391,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKf0ZCRA9TVsSAnZWagAA0MUP/3SzMyChZOyT3+q6Jnxt\nUHffQMX0kx8GgU9atDH+JZ7kwddePS1xnZRfTbqkU1Kke21NgaB/M2DzyxBA\nbqGFPuFeTRQxIFyLX04Cfr5yyk8MfWryQV0MHbcpHulYA+6MsK2TDnLBrO8z\njoboUjZeQypnnJM6IflNEhtLiTGNgaA7Gcq0cQBUXlXCqGcwTleN5Os+PiMr\nIP2wG3yc1OYiq4WE4oB+zbVOk0aHr/YqGvmC7dd1FEM4IRrdlhEmblpaR5kO\n1s1DlwcSop/0B6JxdgCWlwi5QBPTu8gEEbv+9u76FmELNRK4dsbpwgJ992B4\ngx4YOJqL3Dr/8bSCVELBz6WiPols9FMDzJgWoECJImrLi0eyLB7qhMBiJzcc\nGlBuBByjdL6w/PEIs7y2yRcgDLysRknvOqm5EhB1GK2pjJV6HiBmmYnT3svW\nOrH9SwPJH0C20WRDCb+LMwvCzTRBUB1gaSV3pZPV4ARNcfvyyAzAqkckxzIb\nPBs5dFmXQgvwDteC4nSVqDURnSu0scCfgMGhpWJ8LJY8RuDZT4+bq5YRQFvo\ntcLyIP4I7ABh+/k4DtLc43+MKbLJfDPItYwoz4Z9fMyYxJovWqCj0FUQfOPc\n3Sdh5qDIexsDcUdXEF6vLK0x1kWjkwpSi7wzP0G/SyQd2HoHWZajK8IWmrtG\nyL0k\r\n=cZsp\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=8"
  },
  "files": [
    "index.js",
    "index.d.ts"
  ],
  "gitHead": "a8c06732e440214da89c410fa8d0cd74e110868e",
  "homepage": "https://github.com/sindresorhus/p-map#readme",
  "keywords": [
    "promise",
    "map",
    "resolved",
    "wait",
    "collection",
    "iterable",
    "iterator",
    "race",
    "fulfilled",
    "async",
    "await",
    "promises",
    "concurrently",
    "concurrency",
    "parallel",
    "bluebird"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    }
  ],
  "name": "p-map",
  "optionalDependencies": {},
  "readme": "# p-map [![Build Status](https://travis-ci.org/sindresorhus/p-map.svg?branch=master)](https://travis-ci.org/sindresorhus/p-map)\n\n> Map over promises concurrently\n\nUseful when you need to run promise-returning & async functions multiple times with different inputs concurrently.\n\n\n## Install\n\n```\n$ npm install p-map\n```\n\n\n## Usage\n\n```js\nconst pMap = require('p-map');\nconst got = require('got');\n\nconst sites = [\n\tgetWebsiteFromUsername('https://sindresorhus'), //=> Promise\n\t'https://ava.li',\n\t'https://github.com'\n];\n\n(async () => {\n\tconst mapper = async site => {\n\t\tconst {requestUrl} = await got.head(site);\n\t\treturn requestUrl;\n\t};\n\n \tconst result = await pMap(sites, mapper, {concurrency: 2});\n\n\tconsole.log(result);\n\t//=> ['https://sindresorhus.com/', 'https://ava.li/', 'https://github.com/']\n})();\n```\n\n## API\n\n### pMap(input, mapper, options?)\n\nReturns a `Promise` that is fulfilled when all promises in `input` and ones returned from `mapper` are fulfilled, or rejects if any of the promises reject. The fulfilled value is an `Array` of the fulfilled values returned from `mapper` in `input` order.\n\n#### input\n\nType: `Iterable<Promise | unknown>`\n\nIterated over concurrently in the `mapper` function.\n\n#### mapper(element, index)\n\nType: `Function`\n\nExpected to return a `Promise` or value.\n\n#### options\n\nType: `object`\n\n##### concurrency\n\nType: `number`<br>\nDefault: `Infinity`<br>\nMinimum: `1`\n\nNumber of concurrently pending promises returned by `mapper`.\n\n##### stopOnError\n\nType: `boolean`<br>\nDefault: `true`\n\nWhen set to `false`, instead of stopping when a promise rejects, it will wait for all the promises to settle and then reject with an [aggregated error](https://github.com/sindresorhus/aggregate-error) containing all the errors from the rejected promises.\n\n\n## Related\n\n- [p-all](https://github.com/sindresorhus/p-all) - Run promise-returning & async functions concurrently with optional limited concurrency\n- [p-filter](https://github.com/sindresorhus/p-filter) - Filter promises concurrently\n- [p-times](https://github.com/sindresorhus/p-times) - Run promise-returning & async functions a specific number of times concurrently\n- [p-props](https://github.com/sindresorhus/p-props) - Like `Promise.all()` but for `Map` and `Object`\n- [p-map-series](https://github.com/sindresorhus/p-map-series) - Map over promises serially\n- [p-queue](https://github.com/sindresorhus/p-queue) - Promise queue with concurrency control\n- [Moreâ€¦](https://github.com/sindresorhus/promise-fun)\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-p-map?utm_source=npm-p-map&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/p-map.git"
  },
  "scripts": {
    "test": "xo && ava && tsd"
  },
  "version": "3.0.0"
}

{
  "_args": [
    [
      {
        "raw": "@webassemblyjs/wasm-edit@1.9.0",
        "scope": "@webassemblyjs",
        "escapedName": "@webassemblyjs%2fwasm-edit",
        "name": "@webassemblyjs/wasm-edit",
        "rawSpec": "1.9.0",
        "spec": "1.9.0",
        "type": "version"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\webpack"
    ]
  ],
  "_from": "@webassemblyjs/wasm-edit@1.9.0",
  "_hasShrinkwrap": false,
  "_id": "@webassemblyjs/wasm-edit@1.9.0",
  "_location": "/@webassemblyjs/wasm-edit",
  "_nodeVersion": "12.3.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/wasm-edit_1.9.0_1580599206276_0.3791209354976195"
  },
  "_npmUser": {
    "name": "xtuc",
    "email": "npm@sauleau.com"
  },
  "_npmVersion": "lerna/3.13.4/node@v12.3.1+x64 (linux)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@webassemblyjs/wasm-edit@1.9.0",
    "scope": "@webassemblyjs",
    "escapedName": "@webassemblyjs%2fwasm-edit",
    "name": "@webassemblyjs/wasm-edit",
    "rawSpec": "1.9.0",
    "spec": "1.9.0",
    "type": "version"
  },
  "_requiredBy": [
    "/webpack"
  ],
  "_resolved": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.9.0.tgz",
  "_shasum": "3fe6d79d3f0f922183aa86002c42dd256cfee9cf",
  "_shrinkwrap": null,
  "_spec": "@webassemblyjs/wasm-edit@1.9.0",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\webpack",
  "author": {
    "name": "Sven Sauleau"
  },
  "bugs": {
    "url": "https://github.com/xtuc/webassemblyjs/issues"
  },
  "dependencies": {
    "@webassemblyjs/ast": "1.9.0",
    "@webassemblyjs/helper-buffer": "1.9.0",
    "@webassemblyjs/helper-wasm-bytecode": "1.9.0",
    "@webassemblyjs/helper-wasm-section": "1.9.0",
    "@webassemblyjs/wasm-gen": "1.9.0",
    "@webassemblyjs/wasm-opt": "1.9.0",
    "@webassemblyjs/wasm-parser": "1.9.0",
    "@webassemblyjs/wast-printer": "1.9.0"
  },
  "description": "> Rewrite a WASM binary",
  "devDependencies": {
    "@webassemblyjs/helper-test-framework": "1.9.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-FgHzBm80uwz5M8WKnMTn6j/sVbqilPdQXTWraSjBwFXSYGirpkSWE2R9Qvz9tNiTKQvoKILpCuTjBKzOIm0nxw==",
    "shasum": "3fe6d79d3f0f922183aa86002c42dd256cfee9cf",
    "tarball": "https://registry.npmjs.org/@webassemblyjs/wasm-edit/-/wasm-edit-1.9.0.tgz",
    "fileCount": 7,
    "unpackedSize": 29356,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeNgemCRA9TVsSAnZWagAAes8P/A9uRtypVCKawcMCoY2v\nXQ/Iko8PIyQzNfO0KsGciHDAz2d2ajxdWhkqwctWLaOVdayRJSS/A/lw36/M\nwhaAD9VPxGj30NCoOhLOT4yxSvHpGqi1eS+KTDCMrE5G2ho/QYwsVrGeBHgh\n5n/hXgJNt54RzLQ5AT36kDa0kKqhvTj7K9g9oxnIrMr9G01xzm8rF1G5plEB\nYdNbzBJYybxWadHCa2CGkqMpzWM4jLrnP2YITtsGWgSzGfo2yuk+KahqKDf7\nmDV3in1I4RvOnYX2zMxhV+2VNip8Pxx9Tohfte3yxB7mLrbGFUvBZj2AdZwA\nxBaUc2QsuwIVdjTUl29s0IlpfTZTJPQOSAiMMAkgKKxyY2Nq92y2EIJzBOTe\n4dyapuSm6JwaXFkc72X3pdmGRFsrfLug3NshCdNIaZryGqFSTq1qmmDNYqNj\nbPCxfVA45OsU3fuCJSGhdkyO9x2I4kr3xu1aL766jUrMqomoFI8MTuG3sjB1\nNFn03FrK0shfIdv6/eojK8WcHf9NBEfU+pgfBrwc/DfDKtLdmLiyVo8MbAXo\neVvLDT7AtTIfmljG5q2feXekfICuMWAf/vbzNnhK9iWiupVPR7RyyAzcPwYU\n183SdFB9tV9KlWr4kHFlWvDN7dn7dhV5Uqxtlb9r1VDp34mBe7BHu0B4WoHM\nqw4H\r\n=Rxm3\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "0440b420888c1f7701eb9762ec657775506b87d8",
  "homepage": "https://github.com/xtuc/webassemblyjs#readme",
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "module": "esm/index.js",
  "name": "@webassemblyjs/wasm-edit",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# @webassemblyjs/wasm-edit\n\n> Rewrite a WASM binary\n\nReplace in-place an AST node in the binary.\n\n## Installation\n\n```sh\nyarn add @webassemblyjs/wasm-edit\n```\n\n## Usage\n\nUpdate:\n\n```js\nimport { edit } from \"@webassemblyjs/wasm-edit\";\n\nconst binary = [/*...*/];\n\nconst visitors = {\n  ModuleImport({ node }) {\n    node.module = \"foo\";\n    node.name = \"bar\";\n  }\n};\n\nconst newBinary = edit(binary, visitors);\n```\n\nReplace:\n\n```js\nimport { edit } from \"@webassemblyjs/wasm-edit\";\n\nconst binary = [/*...*/];\n\nconst visitors = {\n  Instr(path) {\n    const newNode = t.callInstruction(t.indexLiteral(0));\n    path.replaceWith(newNode);\n  }\n};\n\nconst newBinary = edit(binary, visitors);\n```\n\nRemove:\n\n```js\nimport { edit } from \"@webassemblyjs/wasm-edit\";\n\nconst binary = [/*...*/];\n\nconst visitors = {\n  ModuleExport({ node }) {\n    path.remove()\n  }\n};\n\nconst newBinary = edit(binary, visitors);\n```\n\nInsert:\n\n```js\nimport { add } from \"@webassemblyjs/wasm-edit\";\n\nconst binary = [/*...*/];\n\nconst newBinary = add(actualBinary, [\n  t.moduleImport(\"env\", \"mem\", t.memory(t.limit(1)))\n]);\n```\n\n## Providing the AST\n\nProviding an AST allows you to handle the decoding yourself, here is the API:\n\n```js\naddWithAST(Program, ArrayBuffer, Array<Node>): ArrayBuffer;\neditWithAST(Program, ArrayBuffer, visitors): ArrayBuffer;\n```\n\nNote that the AST will be updated in-place.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xtuc/webassemblyjs.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.9.0"
}

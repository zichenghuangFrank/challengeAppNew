{
  "_args": [
    [
      {
        "raw": "@webassemblyjs/floating-point-hex-parser@1.9.0",
        "scope": "@webassemblyjs",
        "escapedName": "@webassemblyjs%2ffloating-point-hex-parser",
        "name": "@webassemblyjs/floating-point-hex-parser",
        "rawSpec": "1.9.0",
        "spec": "1.9.0",
        "type": "version"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@webassemblyjs\\wast-parser"
    ]
  ],
  "_from": "@webassemblyjs/floating-point-hex-parser@1.9.0",
  "_hasShrinkwrap": false,
  "_id": "@webassemblyjs/floating-point-hex-parser@1.9.0",
  "_location": "/@webassemblyjs/floating-point-hex-parser",
  "_nodeVersion": "12.3.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/floating-point-hex-parser_1.9.0_1580599183999_0.05708543180278847"
  },
  "_npmUser": {
    "name": "xtuc",
    "email": "npm@sauleau.com"
  },
  "_npmVersion": "lerna/3.13.4/node@v12.3.1+x64 (linux)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@webassemblyjs/floating-point-hex-parser@1.9.0",
    "scope": "@webassemblyjs",
    "escapedName": "@webassemblyjs%2ffloating-point-hex-parser",
    "name": "@webassemblyjs/floating-point-hex-parser",
    "rawSpec": "1.9.0",
    "spec": "1.9.0",
    "type": "version"
  },
  "_requiredBy": [
    "/@webassemblyjs/wast-parser"
  ],
  "_resolved": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.9.0.tgz",
  "_shasum": "3c3d3b271bddfc84deb00f71344438311d52ffb4",
  "_shrinkwrap": null,
  "_spec": "@webassemblyjs/floating-point-hex-parser@1.9.0",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@webassemblyjs\\wast-parser",
  "author": {
    "name": "Mauro Bringolf"
  },
  "bugs": {
    "url": "https://github.com/xtuc/webassemblyjs/issues"
  },
  "dependencies": {},
  "description": "A function to parse floating point hexadecimal strings as defined by the WebAssembly specification",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-TG5qcFsS8QB4g4MhrxK5TqfdNe7Ey/7YL/xN+36rRjl/BlGE/NcBvJcqsRgCP6Z92mRE+7N50pRIi8SmKUbcQA==",
    "shasum": "3c3d3b271bddfc84deb00f71344438311d52ffb4",
    "tarball": "https://registry.npmjs.org/@webassemblyjs/floating-point-hex-parser/-/floating-point-hex-parser-1.9.0.tgz",
    "fileCount": 5,
    "unpackedSize": 6369,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeNgeQCRA9TVsSAnZWagAAqU0P+wSQL+WF1uebEC0hzCSK\nOxrSNEcvZjdRGj/n6JoGnys0OtiCkZwufGCrLeWkIP9dwLgRfMABKIiYcWLt\nIZXfFgDhIuoQnYXeMjgCOwsKxNyrgPwKHgGAzy74pfNTIbvIUh2/10JIu5dB\nW5x5F0Dw0A09h0gPk66DdPsgxXk2oQJvITFpbLy7GQPvyhSLqw7wom4l9LnR\nx6Ry7yRkdaYtTMvdI+ffsy0K/4xXaz0Wqsis44t/iLVM/YYr/h8YYWAPEOAn\nmcZRNSzuJp49pkPiKun4yp2sxG84/QDa6FzNZZOjJLTJWgkIWz8iN8v7mt5w\nUtFgMcavl6867zD6uATYU2M++CpCI1SedqiGRN6dguwk72XuimC2ckbOmpXR\ng8xqNVVSjWs0Kpo19UDvSk7iaFlzFr4nLqsE7JvfT72sIaKx6uP6zUaAvAQe\nisS9vNwfvePUvUNbWqFp+DfWe0r84JdkfdRtY7MeMF6W6HsBQ99/WHZdz6Uf\nQmrswnX7/PiJctaFgilfeCOtAG9BYlQH27lVGxSt9nTOWPuaTHxMIj3MFq5+\nrogR4tdAEgOgA3xCId1GfCNUjLs6gQhaSZBgrpXwLBWjr1QKXjOwhYfZB/+x\nC/dG7+1qM/zvo5JeZxmbVhTh8vUnB3NRjLRZgpszBwfOU4eDvEaoY0yIVoj/\nwxuJ\r\n=hHYe\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "0440b420888c1f7701eb9762ec657775506b87d8",
  "homepage": "https://github.com/xtuc/webassemblyjs#readme",
  "keywords": [
    "webassembly",
    "floating-point"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "module": "esm/index.js",
  "name": "@webassemblyjs/floating-point-hex-parser",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# Parser function for floating point hexadecimals\n\n[![license](https://img.shields.io/github/license/maurobringolf/@webassemblyjs/floating-point-hex-parser.svg)]()\n[![GitHub last commit](https://img.shields.io/github/last-commit/maurobringolf/@webassemblyjs/floating-point-hex-parser.svg)]()\n[![npm](https://img.shields.io/npm/v/@webassemblyjs/floating-point-hex-parser.svg)]()\n\n> A JavaScript function to parse floating point hexadecimals as defined by the [WebAssembly specification](https://webassembly.github.io/spec/core/text/values.html#text-hexfloat).\n\n## Usage\n\n```javascript\nimport parseHexFloat from '@webassemblyjs/floating-point-hex-parser'\n\nparseHexFloat('0x1p-1')               // 0.5\nparseHexFloat('0x1.921fb54442d18p+2') // 6.283185307179586\n```\n\n## Tests\n\nThis module is tested in two ways. The first one is through a small set of test cases that can be found in [test/regular.test.js](https://github.com/maurobringolf/@webassemblyjs/floating-point-hex-parser/blob/master/test/regular.test.js). The second one is non-deterministic (sometimes called *fuzzing*):\n\n1. Generate a random IEEE754 double precision value `x`.\n1. Compute its representation `y` in floating point hexadecimal format using the C standard library function `printf` since C supports this format.\n1. Give both values to JS testcase and see if `parseHexFloat(y) === x`.\n\nBy default one `npm test` run tests 100 random samples. If you want to do more, you can set the environment variable `FUZZ_AMOUNT` to whatever number of runs you'd like. Because it uses one child process for each sample, it is really slow though. For more details about the randomized tests see [the source](https://github.com/maurobringolf/@webassemblyjs/floating-point-hex-parser/tree/master/test/fuzzing).\n\n## Links\n\n* [maurobringolf.ch/2017/12/hexadecimal-floating-point-notation/](https://maurobringolf.ch/2017/12/hexadecimal-floating-point-notation/)\n\n* [github.com/xtuc/js-webassembly-interpreter/issues/32](https://github.com/xtuc/js-webassembly-interpreter/issues/32)\n\n* [github.com/WebAssembly/design/issues/292](https://github.com/WebAssembly/design/issues/292)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xtuc/webassemblyjs.git"
  },
  "scripts": {
    "build-fuzzer": "[ -f ./test/fuzzing/parse.out ] || gcc ./test/fuzzing/parse.c -o ./test/fuzzing/parse.out -lm -Wall"
  },
  "version": "1.9.0"
}

{
  "_args": [
    [
      {
        "raw": "fs-minipass@^2.0.0",
        "scope": null,
        "escapedName": "fs-minipass",
        "name": "fs-minipass",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-service\\node_modules\\cacache"
    ]
  ],
  "_from": "fs-minipass@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "fs-minipass@2.1.0",
  "_location": "/fs-minipass",
  "_nodeVersion": "13.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/fs-minipass_2.1.0_1579628347683_0.459474590668985"
  },
  "_npmUser": {
    "name": "isaacs",
    "email": "i@izs.me"
  },
  "_npmVersion": "6.13.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "fs-minipass@^2.0.0",
    "scope": null,
    "escapedName": "fs-minipass",
    "name": "fs-minipass",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-service/cacache"
  ],
  "_resolved": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
  "_shasum": "7f5036fdbf12c63c169190cbe4199c852271f9fb",
  "_shrinkwrap": null,
  "_spec": "fs-minipass@^2.0.0",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-service\\node_modules\\cacache",
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "bugs": {
    "url": "https://github.com/npm/fs-minipass/issues"
  },
  "dependencies": {
    "minipass": "^3.0.0"
  },
  "description": "fs read and write streams based on minipass",
  "devDependencies": {
    "mutate-fs": "^2.0.1",
    "tap": "^14.6.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==",
    "shasum": "7f5036fdbf12c63c169190cbe4199c852271f9fb",
    "tarball": "https://registry.npmjs.org/fs-minipass/-/fs-minipass-2.1.0.tgz",
    "fileCount": 4,
    "unpackedSize": 14089,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJzc8CRA9TVsSAnZWagAA394P/1iQTxpDUgo9PcXXEOf8\nzkw0nrrZ4dvg2FcBUePgJ6iDjY/e/p8wXBXBeCvaDVkULwjlMDMChv5aweS+\nS+hxZHpCe8f3QbTBlUGMQWgTrLrb3qXdHkBpv/uXuZD3eVzqJ8un/85aSc17\nnBJ6cTxbSft00ncApFRAh7fwZERBB8TWip+YSqjkv/5cSiiUwlRG/cCX3ogD\nMuqO083eOwdxonH/UgnGsI3Ijsdo0AqeEEjCYOCfFAnLtCdaDNC/7DqjnyrO\nwVAn0wuu0iAUXx3+3O/HgaAI6KR1qu16Zk9cB0vknd2SpxieqpV8vUNxfg8Y\n9fkdj5BkYenKsc5iqsdClYjnL533BEtd5+xu5/W8yXucQiiKedl06TGa39kj\nbXbXOY7C5LJiNe4BRQjVInBPhZytHQFl0StT9+A8SbCdFYjnZ6jFl4uKYVIe\nOHcjxfEx2gG40J5tRdL0YUM5L55ahgxS23l7hWL5sBOati7wWSP0IbnOa54i\n2qFnkek1tORJKneJ7g6p8XaZCNLY/5tV16Me+M0xJOxwhsNfJ+BvYode/B+/\nBm5uRXu/oW0k7WJ6s8n3GnzVCL8FiQdI7r7s74h745ftL5NXsVJo8d27kZEo\nIvumC4gilQ930J18VYtKlVEagVUOdXrU1zpAZ6tjCHmnMUB/VPE7FY4rFRXT\nHiAi\r\n=X3w7\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "4995b5fd182fb95959ad5572dee5ccc2f31b5b21",
  "homepage": "https://github.com/npm/fs-minipass#readme",
  "keywords": [],
  "license": "ISC",
  "main": "index.js",
  "maintainers": [
    {
      "name": "adam_baldwin",
      "email": "evilpacket@gmail.com"
    },
    {
      "name": "ahmadnassri",
      "email": "ahmad@ahmadnassri.com"
    },
    {
      "name": "claudiahdz",
      "email": "cghr1990@gmail.com"
    },
    {
      "name": "darcyclarke",
      "email": "darcy@darcyclarke.me"
    },
    {
      "name": "isaacs",
      "email": "i@izs.me"
    },
    {
      "name": "mikemimik",
      "email": "mike@mikecorp.ca"
    },
    {
      "name": "ruyadorno",
      "email": "ruyadorno@hotmail.com"
    }
  ],
  "name": "fs-minipass",
  "optionalDependencies": {},
  "readme": "# fs-minipass\n\nFilesystem streams based on [minipass](http://npm.im/minipass).\n\n4 classes are exported:\n\n- ReadStream\n- ReadStreamSync\n- WriteStream\n- WriteStreamSync\n\nWhen using `ReadStreamSync`, all of the data is made available\nimmediately upon consuming the stream.  Nothing is buffered in memory\nwhen the stream is constructed.  If the stream is piped to a writer,\nthen it will synchronously `read()` and emit data into the writer as\nfast as the writer can consume it.  (That is, it will respect\nbackpressure.)  If you call `stream.read()` then it will read the\nentire file and return the contents.\n\nWhen using `WriteStreamSync`, every write is flushed to the file\nsynchronously.  If your writes all come in a single tick, then it'll\nwrite it all out in a single tick.  It's as synchronous as you are.\n\nThe async versions work much like their node builtin counterparts,\nwith the exception of introducing significantly less Stream machinery\noverhead.\n\n## USAGE\n\nIt's just streams, you pipe them or read() them or write() to them.\n\n```js\nconst fsm = require('fs-minipass')\nconst readStream = new fsm.ReadStream('file.txt')\nconst writeStream = new fsm.WriteStream('output.txt')\nwriteStream.write('some file header or whatever\\n')\nreadStream.pipe(writeStream)\n```\n\n## ReadStream(path, options)\n\nPath string is required, but somewhat irrelevant if an open file\ndescriptor is passed in as an option.\n\nOptions:\n\n- `fd` Pass in a numeric file descriptor, if the file is already open.\n- `readSize` The size of reads to do, defaults to 16MB\n- `size` The size of the file, if known.  Prevents zero-byte read()\n  call at the end.\n- `autoClose` Set to `false` to prevent the file descriptor from being\n  closed when the file is done being read.\n\n## WriteStream(path, options)\n\nPath string is required, but somewhat irrelevant if an open file\ndescriptor is passed in as an option.\n\nOptions:\n\n- `fd` Pass in a numeric file descriptor, if the file is already open.\n- `mode` The mode to create the file with. Defaults to `0o666`.\n- `start` The position in the file to start reading.  If not\n  specified, then the file will start writing at position zero, and be\n  truncated by default.\n- `autoClose` Set to `false` to prevent the file descriptor from being\n  closed when the stream is ended.\n- `flags` Flags to use when opening the file.  Irrelevant if `fd` is\n  passed in, since file won't be opened in that case.  Defaults to\n  `'a'` if a `pos` is specified, or `'w'` otherwise.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/npm/fs-minipass.git"
  },
  "scripts": {
    "postpublish": "git push origin --follow-tags",
    "postversion": "npm publish",
    "preversion": "npm test",
    "test": "tap"
  },
  "tap": {
    "check-coverage": true
  },
  "version": "2.1.0"
}

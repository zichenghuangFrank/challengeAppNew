{
  "_args": [
    [
      {
        "raw": "thread-loader@^2.1.3",
        "scope": null,
        "escapedName": "thread-loader",
        "name": "thread-loader",
        "rawSpec": "^2.1.3",
        "spec": ">=2.1.3 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-plugin-babel"
    ]
  ],
  "_from": "thread-loader@^2.1.3",
  "_hasShrinkwrap": false,
  "_id": "thread-loader@2.1.3",
  "_location": "/thread-loader",
  "_nodeVersion": "10.15.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/thread-loader_2.1.3_1565261066698_0.30902545737832754"
  },
  "_npmUser": {
    "name": "evilebottnawi",
    "email": "sheo13666q@gmail.com"
  },
  "_npmVersion": "6.10.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "thread-loader@^2.1.3",
    "scope": null,
    "escapedName": "thread-loader",
    "name": "thread-loader",
    "rawSpec": "^2.1.3",
    "spec": ">=2.1.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@vue/cli-plugin-babel",
    "/@vue/cli-service"
  ],
  "_resolved": "https://registry.npmjs.org/thread-loader/-/thread-loader-2.1.3.tgz",
  "_shasum": "cbd2c139fc2b2de6e9d28f62286ab770c1acbdda",
  "_shrinkwrap": null,
  "_spec": "thread-loader@^2.1.3",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\@vue\\cli-plugin-babel",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/thread-loader/issues"
  },
  "dependencies": {
    "loader-runner": "^2.3.1",
    "loader-utils": "^1.1.0",
    "neo-async": "^2.6.0"
  },
  "description": "Runs the following loaders in a worker pool",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.3",
    "babel-jest": "^23.6.0",
    "babel-loader": "^7.1.5",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-env": "^1.7.0",
    "cross-env": "^5.2.0",
    "css-loader": "^1.0.1",
    "del-cli": "^1.1.0",
    "eslint": "^5.10.0",
    "eslint-config-webpack": "^1.2.5",
    "eslint-plugin-import": "^2.14.0",
    "jest": "^23.6.0",
    "lint-staged": "^8.1.0",
    "lodash": "^4.17.11",
    "mini-css-extract-plugin": "^0.5.0",
    "node-sass": "^4.11.0",
    "nodemon": "^1.18.8",
    "pre-commit": "^1.2.2",
    "sass-loader": "^7.1.0",
    "standard-version": "^4.4.0",
    "webpack": "^4.27.1",
    "webpack-cli": "^3.1.2",
    "webpack-defaults": "^1.6.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-wNrVKH2Lcf8ZrWxDF/khdlLlsTMczdcwPA9VEK4c2exlEPynYWxi9op3nPTo5lAnDIkE0rQEB3VBP+4Zncc9Hg==",
    "shasum": "cbd2c139fc2b2de6e9d28f62286ab770c1acbdda",
    "tarball": "https://registry.npmjs.org/thread-loader/-/thread-loader-2.1.3.tgz",
    "fileCount": 11,
    "unpackedSize": 36295,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdS/0LCRA9TVsSAnZWagAAMcoQAIXQekBpFHbuhBBybrho\nxgE7/YhMSWwc4mw57ERJ6bV9R5dz4YtYr5+aODGV936EfUUJinC522ha87eh\n9HC23ssGUZ/z70UlCqXrrbSWFiACTVfFJwhC1CScH4pYlmF/EyYnpFhDzdVE\nTQondv3xm5CkNJjR2IbEN3mJmaeZwSFOXWTenTVcUO7OuXe6/fEkj4oRyAV6\nbeQwP4JKp7O51j7fJjPJKDfXVtYL8eahDRnE6pRzDrsAKTOSbPJOWRbIQzQm\nlOxW6DI9NOMZ+VKK0FiKxJdjFjqPpCI8VUc1o9fy6gIkpyEZWGx6QVBR2Pb7\nAgTXM7ljUh38ZOIhA4okPuAI0J2kkVY4ypijXbhEZTx+LyQYzzx/shOtXX+f\nrFcl5RhYlPa5556YzF0x7FrL/jtvwIMP1x4H3zSpV+hXTyiDzrA3aFaYjh27\nT76V0uNO6+X3/1USnThqw1SqWfCP9p1ND0pIllDpmZDgmZYjUSnm4qR88L1z\nmtNUCdFUifmpSNudmZ7Z5r34RLQfmRrO6eLGIE48D79uQam6H2ao186uA8KT\nmhHyspuw+MHlPtQCeiQ494Z652GxZ5Lj0YawPao4P5Txmwqjnjr3DmkO6oHX\nYjA+uFtM3inNwZFhhOgiGxtkzwj9HKTNf06hFUZJWLucp7pIcF7MtKHrDsT6\nUWa4\r\n=d144\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6.9.0 <7.0.0 || >= 8.9.0"
  },
  "files": [
    "dist"
  ],
  "gitHead": "177fa7911df71bd54b64b6097bfe690b39506095",
  "homepage": "https://github.com/webpack-contrib/thread-loader",
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "jtangelder",
      "email": "j.tangelder@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "thread-loader",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^2.0.0 || ^3.0.0 || ^4.0.0"
  },
  "pre-commit": "lint-staged",
  "readme": "[![npm][npm]][npm-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" vspace=\"\" hspace=\"25\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon-square-big.svg\">\n  </a>\n  <h1>thread-loader</h1>\n  <p>Runs the following loaders in a worker pool.</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm install --save-dev thread-loader\n```\n\n<h2 align=\"center\">Usage</h2>\n\nPut this loader in front of other loaders. The following loaders run in a worker pool.\n\nLoaders running in a worker pool are limited. Examples:\n\n* Loaders cannot emit files.\n* Loaders cannot use custom loader API (i. e. by plugins).\n* Loaders cannot access the webpack options.\n\nEach worker is a separate node.js process, which has an overhead of ~600ms. There is also an overhead of inter-process communication.\n\nUse this loader only for expensive operations!\n\n<h2 align=\"center\">Examples</h2>\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        include: path.resolve(\"src\"),\n        use: [\n          \"thread-loader\",\n          // your expensive loader (e.g babel-loader)\n        ]\n      }\n    ]\n  }\n}\n```\n\n**with options**\n\n```js\nuse: [\n  {\n    loader: \"thread-loader\",\n    // loaders with equal options will share worker pools\n    options: {\n      // the number of spawned workers, defaults to (number of cpus - 1) or\n      // fallback to 1 when require('os').cpus() is undefined\n      workers: 2,\n\n      // number of jobs a worker processes in parallel\n      // defaults to 20\n      workerParallelJobs: 50,\n\n      // additional node.js arguments\n      workerNodeArgs: ['--max-old-space-size=1024'],\n\n      // Allow to respawn a dead worker pool\n      // respawning slows down the entire compilation\n      // and should be set to false for development\n      poolRespawn: false,\n\n      // timeout for killing the worker processes when idle\n      // defaults to 500 (ms)\n      // can be set to Infinity for watching builds to keep workers alive\n      poolTimeout: 2000,\n\n      // number of jobs the poll distributes to the workers\n      // defaults to 200\n      // decrease of less efficient but more fair distribution\n      poolParallelJobs: 50,\n\n      // name of the pool\n      // can be used to create different pools with elsewise identical options\n      name: \"my-pool\"\n    }\n  },\n  // your expensive loader (e.g babel-loader)\n]\n```\n\n**prewarming**\n\nTo prevent the high delay when booting workers it possible to warmup the worker pool.\n\nThis boots the max number of workers in the pool and loads specified modules into the node.js module cache.\n\n``` js\nconst threadLoader = require('thread-loader');\n\nthreadLoader.warmup({\n  // pool options, like passed to loader options\n  // must match loader options to boot the correct pool\n}, [\n  // modules to load\n  // can be any module, i. e.\n  'babel-loader',\n  'babel-preset-es2015',\n  'sass-loader',\n]);\n```\n\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/sokra\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/sokra.png?size=150\">\n          </br>\n          sokra\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/thread-loader.svg\n[npm-url]: https://npmjs.com/package/thread-loader\n\n[deps]: https://david-dm.org/webpack-contrib/thread-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/thread-loader\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n\n[test]: http://img.shields.io/travis/webpack-contrib/thread-loader.svg\n[test-url]: https://travis-ci.org/webpack-contrib/thread-loader\n\n[cover]: https://codecov.io/gh/webpack-contrib/thread-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/thread-loader\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/thread-loader.git"
  },
  "scripts": {
    "appveyor:test": "npm run test",
    "build": "cross-env NODE_ENV=production babel src -d dist --ignore 'src/**/*.test.js'",
    "clean": "del-cli dist",
    "lint": "eslint --cache src test",
    "lint-staged": "lint-staged",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "release": "standard-version",
    "security": "npm audit",
    "start": "npm run build -- -w",
    "test": "jest",
    "test:coverage": "jest --collectCoverageFrom='src/**/*.js' --coverage",
    "test:watch": "jest --watch",
    "travis:coverage": "npm run test:coverage -- --runInBand",
    "travis:lint": "npm run lint && npm run security",
    "travis:test": "npm run test -- --runInBand",
    "webpack-defaults": "webpack-defaults"
  },
  "version": "2.1.3"
}

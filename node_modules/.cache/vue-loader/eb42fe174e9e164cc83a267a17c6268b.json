{"remainingRequest":"/Users/huangzicheng/Desktop/challengeApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangzicheng/Desktop/challengeApp/src/components/Beijing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangzicheng/Desktop/challengeApp/src/components/Beijing.vue","mtime":1604469348000},{"path":"/Users/huangzicheng/Desktop/challengeApp/node_modules/cache-loader/dist/cjs.js","mtime":1604363082000},{"path":"/Users/huangzicheng/Desktop/challengeApp/node_modules/babel-loader/lib/index.js","mtime":1604363082000},{"path":"/Users/huangzicheng/Desktop/challengeApp/node_modules/cache-loader/dist/cjs.js","mtime":1604363082000},{"path":"/Users/huangzicheng/Desktop/challengeApp/node_modules/vue-loader/lib/index.js","mtime":1604363082000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJkZXRhaWxzIiwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZGF0ZTogJycsCiAgICAgICAgICAgIGFpcl9wbTI1OiAnJywKICAgICAgICAgICAgY2l0eWVuOiAnJywKICAgICAgICAgICAgaHVtaWRpdHk6ICcnLAogICAgICAgICAgICBwcmVzc3VyZTogJycsCiAgICAgICAgICAgIHVwZGF0ZV90aW1lOiAnJywKICAgICAgICAgICAgdmlzaWJpbGl0eTogJycsCiAgICAgICAgICAgIHRlbXBlcmF0dXJlOiAnJywKICAgICAgICAgICAgcHJldmlvdXNEYXRhOiAnJwogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIHRoaXMuZ2V0V2VhdGhlclJlcG9ydCgpOwogICAgfSwKICAgIG1ldGhvZHM6ewogICAgICAgIGdldFdlYXRoZXJSZXBvcnQoKSB7CiAgICAgICAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgICAgICAgbGV0IHVybCA9ICdodHRwczovL3YwLnlpa2V0aWFucWkuY29tL2FwaT92ZXJzaW9uPXY2MSZhcHBpZD0zOTQyNTgyNyZhcHBzZWNyZXQ9Y0VnS2ZydzgmY2l0eWlkPTEwMTAxMDEwMCc7CiAgICAgICAgICAgIHRoaXMuJGF4aW9zLmdldCh1cmwpLnRoZW4oZnVuY3Rpb24ocmVzKXsKICAgICAgICAgICAgICAgIHRoYXQuY2l0eWVuPSByZXMuZGF0YS5jaXR5RW47CiAgICAgICAgICAgICAgICB0aGF0Lmh1bWlkaXR5ID0gcmVzLmRhdGEuaHVtaWRpdHk7CiAgICAgICAgICAgICAgICB0aGF0LnByZXNzdXJlID0gcmVzLmRhdGEucHJlc3N1cmU7CiAgICAgICAgICAgICAgICB0aGF0LnVwZGF0ZV90aW1lID0gcmVzLmRhdGEudXBkYXRlX3RpbWU7CiAgICAgICAgICAgICAgICB0aGF0LnZpc2liaWxpdHkgPSByZXMuZGF0YS52aXNpYmlsaXR5OwogICAgICAgICAgICAgICAgdGhhdC5haXJfcG0yNSA9IHJlcy5kYXRhLmFpcl9wbTI1OwogICAgICAgICAgICAgICAgdGhhdC50ZW1wZXJhdHVyZSA9IHJlcy5kYXRhLnRlbTsKCiAgICAgICAgICAgICAgICAvLyBHZXQgRGF0ZSBmb3Igc3RvcmluZyBkYXRhCiAgICAgICAgICAgICAgICB0aGF0LmRhdGUgPSByZXMuZGF0YS5kYXRlOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhhdC5kYXRlKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgICAgICAgLy8gSWYgdGhlcmUgaXMgaW5mbyBpbiBDb29raWUKICAgICAgICAgICAgICAgIGlmICh0aGF0LiRjb29raWUuZ2V0KCdCZWlqaW5nJykpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgdGVtcCA9IHRoYXQuJGNvb2tpZS5nZXQoJ0JlaWppbmcnKS5zcGxpdCgiPSIpOwogICAgICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGVtcC5sZW5ndGg7IGkgKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC5wcmV2aW91c0RhdGEgKz0gdGVtcFtpXTsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhhdC5wcmV2aW91c0RhdGEpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgICAgIHNhdmVEYXRhKCkgewogICAgICAgICAgICB2YXIgdGV4dFRvV3JpdGUgPSAiQ2l0eTogIiArIHRoaXMuY2l0eWVuICsgJ1xuJyArICJVcGRhdGUgdGltZTogIiArIHRoaXMudXBkYXRlX3RpbWUgKyAnXG4nICsgIlRlbXBlcmF0dXJlOiAiCiAgICAgICAgICAgICAgICArIHRoaXMudGVtcGVyYXR1cmUgKyAnXG4nICsgIkh1bWlkaXR5OiAiICsgdGhpcy5odW1pZGl0eSArICdcbicgKyAiUHJlc3N1cmU6ICIgKyB0aGlzLnByZXNzdXJlICsgJ1xuJwogICAgICAgICAgICAgICAgKyAiVmlzaWJpbGl0eTogIiArIHRoaXMudmlzaWJpbGl0eSArICdcbicgKyAiQWlyIChwbTIuNSk6ICIgKyB0aGlzLmFpcl9wbTI1OwogICAgICAgICAgICAvLyBwcmVzZXJ2aW5nIGxpbmUgYnJlYWtzCiAgICAgICAgICAgIHZhciB0ZXh0RmlsZUFzQmxvYiA9IG5ldyBCbG9iKFt0ZXh0VG9Xcml0ZV0sIHsgdHlwZTogJ3RleHQvcGxhaW4nIH0pOwogICAgICAgICAgICAvLyBmaWxlbmFtZSB0byBzYXZlIGFzCiAgICAgICAgICAgIHZhciBmaWxlTmFtZVRvU2F2ZUFzID0gdGhpcy5jaXR5ZW4gKyAnX1dlYXRoZXJSZXBvcnQudHh0JzsKICAgICAgICAgICAgdmFyIGRvd25sb2FkTGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTsKICAgICAgICAgICAgZG93bmxvYWRMaW5rLmRvd25sb2FkID0gZmlsZU5hbWVUb1NhdmVBczsKICAgICAgICAgICAgLy8gaGlkZGVuIGxpbmsgdGl0bGUgbmFtZQogICAgICAgICAgICBkb3dubG9hZExpbmsuaW5uZXJIVE1MID0gJ0xJTktUSVRMRSc7CiAgICAgICAgICAgIHdpbmRvdy5VUkwgPSB3aW5kb3cuVVJMIHx8IHdpbmRvdy53ZWJraXRVUkw7CiAgICAgICAgICAgIGRvd25sb2FkTGluay5ocmVmID0gd2luZG93LlVSTC5jcmVhdGVPYmplY3RVUkwodGV4dEZpbGVBc0Jsb2IpOwogICAgICAgICAgICBkb3dubG9hZExpbmsuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkb3dubG9hZExpbmspOwogICAgICAgICAgICBkb3dubG9hZExpbmsuY2xpY2soKTsKICAgICAgICB9LAogICAgICAgIHNhdmVDb29raWUoKSB7CiAgICAgICAgICAgIGxldCB0aGF0ID0gdGhpczsKICAgICAgICAgICAgdmFyIGhpc3RvcnkgPSBbXTsKICAgICAgICAgICAgLy8gSWYgdGhlIGNvb2tpZSBvZiBzdG9yaW5nIGluZm9ybWF0aW9uIGlzIG5vdCBudWxsCiAgICAgICAgICAgIGlmICh0aGF0LiRjb29raWUuZ2V0KCdCZWlqaW5nJykpIHsKICAgICAgICAgICAgICAgIHZhciBpbmZvID0gdGhhdC4kY29va2llLmdldCgnQmVpamluZycpOwogICAgICAgICAgICAgICAgaGlzdG9yeSA9IGluZm8uc3BsaXQoIj0iKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBoaXN0b3J5LnB1c2goIkRhdGU6ICIgKyB0aGF0LmRhdGUgKyAiLCAiICsgIlVwZGF0ZSB0aW1lOiAiICsgdGhhdC51cGRhdGVfdGltZSArICcsICcgKyAiVGVtcGVyYXR1cmU6ICIKICAgICAgICAgICAgICAgICsgdGhhdC50ZW1wZXJhdHVyZSArICcsICcgKyAiSHVtaWRpdHk6ICIgKyB0aGF0Lmh1bWlkaXR5ICsgJywgJyArICJQcmVzc3VyZTogIiArIHRoYXQucHJlc3N1cmUgKyAnLCAnCiAgICAgICAgICAgICAgICArICJWaXNpYmlsaXR5OiAiICsgdGhhdC52aXNpYmlsaXR5ICsgJywgJyArICJBaXIgKHBtMi41KTogIiArIHRoYXQuYWlyX3BtMjUgKyAnPGJyLz4nKTsKICAgICAgICAgICAgdmFyIHN0b3JlQ29va2llID0gaGlzdG9yeS5qb2luKCI9Iik7CiAgICAgICAgICAgIHRoYXQuJGNvb2tpZS5zZXQoJ0JlaWppbmcnLCBzdG9yZUNvb2tpZSk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Beijing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Beijing.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!--    Use the row to show details about Beijing weather-->\n    <div class=\"details\">\n        <Row type=\"flex\" justify=\"center\">\n            <i-col>\n                <h2>Basic Information</h2>\n            </i-col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n<!--            image reference: https://www.queensu.ca/innovationcentre/global-network-node-beijing-->\n            <img src=\"../assets/Beijing.jpeg\" alt=\"Beijing\" height=\"30%\" width=\"30%\">\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n            <i-col offset=\"1\" span=\"22\">\n                <Divider></Divider>\n            </i-col>\n        </Row>\n        <div class=\"information\">\n            <Row>\n                <i-col offset=\"5\" span=\"4\">\n                    city:{{cityen}}\n                </i-col>\n                <i-col span=\"4\">\n                    Date:{{date}}\n                </i-col>\n                <i-col span=\"4\">\n                    UpdateTime:{{update_time}}\n                </i-col>\n                <i-col span=\"4\">\n                    temperature:{{temperature}}\n                </i-col>\n            </Row>\n            <br/>\n            <Row>\n                <i-col offset=\"5\" span=\"4\">\n                    visibility:{{visibility}}\n                </i-col>\n                <i-col span=\"4\">\n                    humidity:{{humidity}}\n                </i-col>\n                <i-col span=\"4\">\n                    pressure:{{pressure}}\n                </i-col>\n                <i-col span=\"4\">\n                    air_pm25:{{air_pm25}}\n                </i-col>\n            </Row>\n        </div>\n        <br/>\n<!--        Click the 'Save' button to save data in Cookie-->\n        <Row type=\"flex\" justify=\"center\">\n            <i-col>\n                <Button type=\"primary\" @click=\"saveCookie\">Save</Button>\n            </i-col>\n        </Row>\n        <br/>\n<!--        Click the 'Download' button to save and download current data-->\n        <Row type=\"flex\" justify=\"center\">\n            <i-col>\n                <Button type=\"primary\" @click=\"saveData\">Download</Button>\n            </i-col>\n        </Row>\n        <br/>\n<!--        Show the content in Cookie-->\n        <div class=\"history\" v-html=\"previousData\"></div>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"details\",\n        data() {\n            return {\n                date: '',\n                air_pm25: '',\n                cityen: '',\n                humidity: '',\n                pressure: '',\n                update_time: '',\n                visibility: '',\n                temperature: '',\n                previousData: ''\n            }\n        },\n        created() {\n            this.getWeatherReport();\n        },\n        methods:{\n            getWeatherReport() {\n                let that = this;\n                let url = 'https://v0.yiketianqi.com/api?version=v61&appid=39425827&appsecret=cEgKfrw8&cityid=101010100';\n                this.$axios.get(url).then(function(res){\n                    that.cityen= res.data.cityEn;\n                    that.humidity = res.data.humidity;\n                    that.pressure = res.data.pressure;\n                    that.update_time = res.data.update_time;\n                    that.visibility = res.data.visibility;\n                    that.air_pm25 = res.data.air_pm25;\n                    that.temperature = res.data.tem;\n\n                    // Get Date for storing data\n                    that.date = res.data.date;\n                    console.log(that.date);\n                    console.log(res);\n\n                    // If there is info in Cookie\n                    if (that.$cookie.get('Beijing')) {\n                        let temp = that.$cookie.get('Beijing').split(\"=\");\n                        for (let i = 0; i < temp.length; i ++) {\n                            that.previousData += temp[i];\n                            console.log(that.previousData);\n                        }\n                    }\n\n                }).catch(function (error) {\n                    console.log(error);\n                });\n            },\n            saveData() {\n                var textToWrite = \"City: \" + this.cityen + '\\n' + \"Update time: \" + this.update_time + '\\n' + \"Temperature: \"\n                    + this.temperature + '\\n' + \"Humidity: \" + this.humidity + '\\n' + \"Pressure: \" + this.pressure + '\\n'\n                    + \"Visibility: \" + this.visibility + '\\n' + \"Air (pm2.5): \" + this.air_pm25;\n                // preserving line breaks\n                var textFileAsBlob = new Blob([textToWrite], { type: 'text/plain' });\n                // filename to save as\n                var fileNameToSaveAs = this.cityen + '_WeatherReport.txt';\n                var downloadLink = document.createElement('a');\n                downloadLink.download = fileNameToSaveAs;\n                // hidden link title name\n                downloadLink.innerHTML = 'LINKTITLE';\n                window.URL = window.URL || window.webkitURL;\n                downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n                downloadLink.style.display = 'none';\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n            },\n            saveCookie() {\n                let that = this;\n                var history = [];\n                // If the cookie of storing information is not null\n                if (that.$cookie.get('Beijing')) {\n                    var info = that.$cookie.get('Beijing');\n                    history = info.split(\"=\");\n                }\n                history.push(\"Date: \" + that.date + \", \" + \"Update time: \" + that.update_time + ', ' + \"Temperature: \"\n                    + that.temperature + ', ' + \"Humidity: \" + that.humidity + ', ' + \"Pressure: \" + that.pressure + ', '\n                    + \"Visibility: \" + that.visibility + ', ' + \"Air (pm2.5): \" + that.air_pm25 + '<br/>');\n                var storeCookie = history.join(\"=\");\n                that.$cookie.set('Beijing', storeCookie);\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .details{\n        margin-top: 20px;\n    }\n    .history{\n        text-align: center;\n    }\n</style>\n"]}]}
{"remainingRequest":"/Users/huangzicheng/Desktop/challengeAppNew/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/huangzicheng/Desktop/challengeAppNew/src/components/Beijing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/huangzicheng/Desktop/challengeAppNew/src/components/Beijing.vue","mtime":1604476595471},{"path":"/Users/huangzicheng/Desktop/challengeAppNew/node_modules/cache-loader/dist/cjs.js","mtime":1604363082000},{"path":"/Users/huangzicheng/Desktop/challengeAppNew/node_modules/babel-loader/lib/index.js","mtime":1604363082000},{"path":"/Users/huangzicheng/Desktop/challengeAppNew/node_modules/cache-loader/dist/cjs.js","mtime":1604363082000},{"path":"/Users/huangzicheng/Desktop/challengeAppNew/node_modules/vue-loader/lib/index.js","mtime":1604363082000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJkZXRhaWxzIiwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZGF0ZTogJycsCiAgICAgICAgICAgIGFpcl9wbTI1OiAnJywKICAgICAgICAgICAgY2l0eWVuOiAnJywKICAgICAgICAgICAgaHVtaWRpdHk6ICcnLAogICAgICAgICAgICBwcmVzc3VyZTogJycsCiAgICAgICAgICAgIHVwZGF0ZV90aW1lOiAnJywKICAgICAgICAgICAgdmlzaWJpbGl0eTogJycsCiAgICAgICAgICAgIHRlbXBlcmF0dXJlOiAnJywKICAgICAgICAgICAgY29uZmlybUluZm86ICcnLAogICAgICAgICAgICBwcmV2aW91c0RhdGE6ICcnCiAgICAgICAgfQogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgdGhpcy5nZXRXZWF0aGVyUmVwb3J0KCk7CiAgICB9LAogICAgbWV0aG9kczp7CiAgICAgICAgZ2V0V2VhdGhlclJlcG9ydCgpIHsKICAgICAgICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICAgICAgICBsZXQgdXJsID0gJ2h0dHBzOi8vdjAueWlrZXRpYW5xaS5jb20vYXBpP3ZlcnNpb249djYxJmFwcGlkPTM5NDI1ODI3JmFwcHNlY3JldD1jRWdLZnJ3OCZjaXR5aWQ9MTAxMDEwMTAwJzsKICAgICAgICAgICAgdGhpcy4kYXhpb3MuZ2V0KHVybCkudGhlbihmdW5jdGlvbihyZXMpewogICAgICAgICAgICAgICAgdGhhdC5jaXR5ZW49IHJlcy5kYXRhLmNpdHlFbjsKICAgICAgICAgICAgICAgIHRoYXQuaHVtaWRpdHkgPSByZXMuZGF0YS5odW1pZGl0eTsKICAgICAgICAgICAgICAgIHRoYXQucHJlc3N1cmUgPSByZXMuZGF0YS5wcmVzc3VyZTsKICAgICAgICAgICAgICAgIHRoYXQudXBkYXRlX3RpbWUgPSByZXMuZGF0YS51cGRhdGVfdGltZTsKICAgICAgICAgICAgICAgIHRoYXQudmlzaWJpbGl0eSA9IHJlcy5kYXRhLnZpc2liaWxpdHk7CiAgICAgICAgICAgICAgICB0aGF0LmFpcl9wbTI1ID0gcmVzLmRhdGEuYWlyX3BtMjU7CiAgICAgICAgICAgICAgICB0aGF0LnRlbXBlcmF0dXJlID0gcmVzLmRhdGEudGVtOwoKICAgICAgICAgICAgICAgIC8vIEdldCBEYXRlIGZvciBzdG9yaW5nIGRhdGEKICAgICAgICAgICAgICAgIHRoYXQuZGF0ZSA9IHJlcy5kYXRhLmRhdGU7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGF0LmRhdGUpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTsKCiAgICAgICAgICAgICAgICAvLyBJZiB0aGVyZSBpcyBpbmZvIGluIENvb2tpZQogICAgICAgICAgICAgICAgaWYgKHRoYXQuJGNvb2tpZS5nZXQoJ0JlaWppbmcnKSkgewogICAgICAgICAgICAgICAgICAgIGxldCB0ZW1wID0gdGhhdC4kY29va2llLmdldCgnQmVpamluZycpLnNwbGl0KCI9Iik7CiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0ZW1wLmxlbmd0aDsgaSArKykgewogICAgICAgICAgICAgICAgICAgICAgICB0aGF0LnByZXZpb3VzRGF0YSArPSB0ZW1wW2ldOwogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGF0LnByZXZpb3VzRGF0YSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgc2F2ZURhdGEoKSB7CiAgICAgICAgICAgIHZhciB0ZXh0VG9Xcml0ZSA9ICJDaXR5OiAiICsgdGhpcy5jaXR5ZW4gKyAnXG4nICsgIlVwZGF0ZSB0aW1lOiAiICsgdGhpcy51cGRhdGVfdGltZSArICdcbicgKyAiVGVtcGVyYXR1cmU6ICIKICAgICAgICAgICAgICAgICsgdGhpcy50ZW1wZXJhdHVyZSArICdcbicgKyAiSHVtaWRpdHk6ICIgKyB0aGlzLmh1bWlkaXR5ICsgJ1xuJyArICJQcmVzc3VyZTogIiArIHRoaXMucHJlc3N1cmUgKyAnXG4nCiAgICAgICAgICAgICAgICArICJWaXNpYmlsaXR5OiAiICsgdGhpcy52aXNpYmlsaXR5ICsgJ1xuJyArICJBaXIgKHBtMi41KTogIiArIHRoaXMuYWlyX3BtMjU7CiAgICAgICAgICAgIC8vIHByZXNlcnZpbmcgbGluZSBicmVha3MKICAgICAgICAgICAgdmFyIHRleHRGaWxlQXNCbG9iID0gbmV3IEJsb2IoW3RleHRUb1dyaXRlXSwgeyB0eXBlOiAndGV4dC9wbGFpbicgfSk7CiAgICAgICAgICAgIC8vIGZpbGVuYW1lIHRvIHNhdmUgYXMKICAgICAgICAgICAgdmFyIGZpbGVOYW1lVG9TYXZlQXMgPSB0aGlzLmNpdHllbiArICdfV2VhdGhlclJlcG9ydC50eHQnOwogICAgICAgICAgICB2YXIgZG93bmxvYWRMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpOwogICAgICAgICAgICBkb3dubG9hZExpbmsuZG93bmxvYWQgPSBmaWxlTmFtZVRvU2F2ZUFzOwogICAgICAgICAgICAvLyBoaWRkZW4gbGluayB0aXRsZSBuYW1lCiAgICAgICAgICAgIGRvd25sb2FkTGluay5pbm5lckhUTUwgPSAnTElOS1RJVExFJzsKICAgICAgICAgICAgd2luZG93LlVSTCA9IHdpbmRvdy5VUkwgfHwgd2luZG93LndlYmtpdFVSTDsKICAgICAgICAgICAgZG93bmxvYWRMaW5rLmhyZWYgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTCh0ZXh0RmlsZUFzQmxvYik7CiAgICAgICAgICAgIGRvd25sb2FkTGluay5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGRvd25sb2FkTGluayk7CiAgICAgICAgICAgIGRvd25sb2FkTGluay5jbGljaygpOwogICAgICAgIH0sCiAgICAgICAgc2F2ZUNvb2tpZSgpIHsKICAgICAgICAgICAgbGV0IHRoYXQgPSB0aGlzOwogICAgICAgICAgICB2YXIgaGlzdG9yeSA9IFtdOwogICAgICAgICAgICAvLyBJZiB0aGUgY29va2llIG9mIHN0b3JpbmcgaW5mb3JtYXRpb24gaXMgbm90IG51bGwKICAgICAgICAgICAgaWYgKHRoYXQuJGNvb2tpZS5nZXQoJ0JlaWppbmcnKSkgewogICAgICAgICAgICAgICAgdmFyIGluZm8gPSB0aGF0LiRjb29raWUuZ2V0KCdCZWlqaW5nJyk7CiAgICAgICAgICAgICAgICBoaXN0b3J5ID0gaW5mby5zcGxpdCgiPSIpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGhpc3RvcnkucHVzaCgiRGF0ZTogIiArIHRoYXQuZGF0ZSArICIsICIgKyAiVXBkYXRlIHRpbWU6ICIgKyB0aGF0LnVwZGF0ZV90aW1lICsgJywgJyArICJUZW1wZXJhdHVyZTogIgogICAgICAgICAgICAgICAgKyB0aGF0LnRlbXBlcmF0dXJlICsgJywgJyArICJIdW1pZGl0eTogIiArIHRoYXQuaHVtaWRpdHkgKyAnLCAnICsgIlByZXNzdXJlOiAiICsgdGhhdC5wcmVzc3VyZSArICcsICcKICAgICAgICAgICAgICAgICsgIlZpc2liaWxpdHk6ICIgKyB0aGF0LnZpc2liaWxpdHkgKyAnLCAnICsgIkFpciAocG0yLjUpOiAiICsgdGhhdC5haXJfcG0yNSArICc8YnIvPicpOwogICAgICAgICAgICB2YXIgc3RvcmVDb29raWUgPSBoaXN0b3J5LmpvaW4oIj0iKTsKICAgICAgICAgICAgdGhhdC4kY29va2llLnNldCgnQmVpamluZycsIHN0b3JlQ29va2llKTsKICAgICAgICAgICAgdGhhdC5jb25maXJtSW5mbyA9ICJTYXZlZCI7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["Beijing.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Beijing.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!--    Use the row to show details about Beijing weather-->\n    <div class=\"details\">\n        <Row type=\"flex\" justify=\"center\">\n            <i-col>\n                <h2>Basic Information</h2>\n            </i-col>\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n<!--            image reference: https://www.queensu.ca/innovationcentre/global-network-node-beijing-->\n            <img src=\"../assets/Beijing.jpeg\" alt=\"Beijing\" height=\"30%\" width=\"30%\">\n        </Row>\n        <Row type=\"flex\" justify=\"center\">\n            <i-col offset=\"1\" span=\"22\">\n                <Divider></Divider>\n            </i-col>\n        </Row>\n        <div class=\"information\">\n            <Row>\n                <i-col offset=\"5\" span=\"4\">\n                    city:{{cityen}}\n                </i-col>\n                <i-col span=\"4\">\n                    Date:{{date}}\n                </i-col>\n                <i-col span=\"4\">\n                    UpdateTime:{{update_time}}\n                </i-col>\n                <i-col span=\"4\">\n                    temperature:{{temperature}}\n                </i-col>\n            </Row>\n            <br/>\n            <Row>\n                <i-col offset=\"5\" span=\"4\">\n                    visibility:{{visibility}}\n                </i-col>\n                <i-col span=\"4\">\n                    humidity:{{humidity}}\n                </i-col>\n                <i-col span=\"4\">\n                    pressure:{{pressure}}\n                </i-col>\n                <i-col span=\"4\">\n                    air_pm25:{{air_pm25}}\n                </i-col>\n            </Row>\n        </div>\n        <br/>\n<!--        Click the 'Save' button to save data in Cookie-->\n        <Row type=\"flex\" justify=\"center\">\n            <i-col>\n                <Button type=\"primary\" @click=\"saveCookie\">Save</Button>\n            </i-col>\n        </Row>\n        <br/>\n<!--        Click the 'Download' button to save and download current data-->\n        <Row type=\"flex\" justify=\"center\">\n            <i-col>\n                <Button type=\"primary\" @click=\"saveData\">Download</Button>\n            </i-col>\n        </Row>\n        <br/>\n<!--        Confirm Info-->\n        <Row type=\"flex\" justify=\"center\">\n            <i-col>\n                <div>{{confirmInfo}}</div>\n            </i-col>\n        </Row>\n        <br/>\n<!--        Show the content in Cookie-->\n        <div class=\"history\" v-html=\"previousData\"></div>\n\n    </div>\n</template>\n\n<script>\n    export default {\n        name: \"details\",\n        data() {\n            return {\n                date: '',\n                air_pm25: '',\n                cityen: '',\n                humidity: '',\n                pressure: '',\n                update_time: '',\n                visibility: '',\n                temperature: '',\n                confirmInfo: '',\n                previousData: ''\n            }\n        },\n        created() {\n            this.getWeatherReport();\n        },\n        methods:{\n            getWeatherReport() {\n                let that = this;\n                let url = 'https://v0.yiketianqi.com/api?version=v61&appid=39425827&appsecret=cEgKfrw8&cityid=101010100';\n                this.$axios.get(url).then(function(res){\n                    that.cityen= res.data.cityEn;\n                    that.humidity = res.data.humidity;\n                    that.pressure = res.data.pressure;\n                    that.update_time = res.data.update_time;\n                    that.visibility = res.data.visibility;\n                    that.air_pm25 = res.data.air_pm25;\n                    that.temperature = res.data.tem;\n\n                    // Get Date for storing data\n                    that.date = res.data.date;\n                    console.log(that.date);\n                    console.log(res);\n\n                    // If there is info in Cookie\n                    if (that.$cookie.get('Beijing')) {\n                        let temp = that.$cookie.get('Beijing').split(\"=\");\n                        for (let i = 0; i < temp.length; i ++) {\n                            that.previousData += temp[i];\n                            console.log(that.previousData);\n                        }\n                    }\n\n                }).catch(function (error) {\n                    console.log(error);\n                });\n            },\n            saveData() {\n                var textToWrite = \"City: \" + this.cityen + '\\n' + \"Update time: \" + this.update_time + '\\n' + \"Temperature: \"\n                    + this.temperature + '\\n' + \"Humidity: \" + this.humidity + '\\n' + \"Pressure: \" + this.pressure + '\\n'\n                    + \"Visibility: \" + this.visibility + '\\n' + \"Air (pm2.5): \" + this.air_pm25;\n                // preserving line breaks\n                var textFileAsBlob = new Blob([textToWrite], { type: 'text/plain' });\n                // filename to save as\n                var fileNameToSaveAs = this.cityen + '_WeatherReport.txt';\n                var downloadLink = document.createElement('a');\n                downloadLink.download = fileNameToSaveAs;\n                // hidden link title name\n                downloadLink.innerHTML = 'LINKTITLE';\n                window.URL = window.URL || window.webkitURL;\n                downloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n                downloadLink.style.display = 'none';\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n            },\n            saveCookie() {\n                let that = this;\n                var history = [];\n                // If the cookie of storing information is not null\n                if (that.$cookie.get('Beijing')) {\n                    var info = that.$cookie.get('Beijing');\n                    history = info.split(\"=\");\n                }\n                history.push(\"Date: \" + that.date + \", \" + \"Update time: \" + that.update_time + ', ' + \"Temperature: \"\n                    + that.temperature + ', ' + \"Humidity: \" + that.humidity + ', ' + \"Pressure: \" + that.pressure + ', '\n                    + \"Visibility: \" + that.visibility + ', ' + \"Air (pm2.5): \" + that.air_pm25 + '<br/>');\n                var storeCookie = history.join(\"=\");\n                that.$cookie.set('Beijing', storeCookie);\n                that.confirmInfo = \"Saved\";\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    .details{\n        margin-top: 20px;\n    }\n    .history{\n        text-align: center;\n    }\n</style>\n"]}]}
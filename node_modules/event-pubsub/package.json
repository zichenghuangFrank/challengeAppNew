{
  "_args": [
    [
      {
        "raw": "event-pubsub@4.3.0",
        "scope": null,
        "escapedName": "event-pubsub",
        "name": "event-pubsub",
        "rawSpec": "4.3.0",
        "spec": "4.3.0",
        "type": "version"
      },
      "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\node-ipc"
    ]
  ],
  "_from": "event-pubsub@4.3.0",
  "_id": "event-pubsub@4.3.0",
  "_inCache": true,
  "_location": "/event-pubsub",
  "_nodeVersion": "8.1.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/event-pubsub-4.3.0.tgz_1503485942193_0.577060196083039"
  },
  "_npmUser": {
    "name": "riaevangelist",
    "email": "brandon@diginow.it"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "event-pubsub@4.3.0",
    "scope": null,
    "escapedName": "event-pubsub",
    "name": "event-pubsub",
    "rawSpec": "4.3.0",
    "spec": "4.3.0",
    "type": "version"
  },
  "_requiredBy": [
    "/node-ipc"
  ],
  "_resolved": "https://registry.npmjs.org/event-pubsub/-/event-pubsub-4.3.0.tgz",
  "_shasum": "f68d816bc29f1ec02c539dc58c8dd40ce72cb36e",
  "_shrinkwrap": null,
  "_spec": "event-pubsub@4.3.0",
  "_where": "C:\\Users\\ziche\\Desktop\\challenge\\node_modules\\node-ipc",
  "author": {
    "name": "Brandon Nozaki Miller"
  },
  "bugs": {
    "url": "https://github.com/RIAEvangelist/event-pubsub/issues"
  },
  "dependencies": {},
  "description": "Super light and fast Extensible PubSub events and EventEmitters for Node and the browser with support for ES6 by default, and ES5 versions for older verions of node and older IE/Safari versions. Easy for any developer level. No frills, just high speed pubsub events!",
  "devDependencies": {},
  "directories": {
    "example": "examples"
  },
  "dist": {
    "integrity": "sha512-z7IyloorXvKbFx9Bpie2+vMJKKx1fH1EN5yiTfp8CiLOTptSYy1g8H4yDpGlEdshL1PBiFtBHepF2cNsqeEeFQ==",
    "shasum": "f68d816bc29f1ec02c539dc58c8dd40ce72cb36e",
    "tarball": "https://registry.npmjs.org/event-pubsub/-/event-pubsub-4.3.0.tgz"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "56464c09a8ca10ec517001153ff7bbd9f760d401",
  "homepage": "https://github.com/RIAEvangelist/event-pubsub",
  "keywords": [
    "event",
    "events",
    "pubsub",
    "node",
    "browser"
  ],
  "license": "Unlicense",
  "main": "event-pubsub.js",
  "maintainers": [
    {
      "name": "riaevangelist",
      "email": "brandon@diginow.it"
    },
    {
      "name": "vvinder",
      "email": "vvinder@gmail.com"
    }
  ],
  "name": "event-pubsub",
  "optionalDependencies": {},
  "readme": "# Event PubSub\n\nnpm info :  \n![event-pubsub npm version](https://img.shields.io/npm/v/event-pubsub.svg) ![total npm downloads for event-pubsub](https://img.shields.io/npm/dt/event-pubsub.svg) ![monthly npm downloads for event-pubsub](https://img.shields.io/npm/dm/event-pubsub.svg)\n\nGitHub info :  \n![event-pubsub GitHub Release](https://img.shields.io/github/release/RIAEvangelist/event-pubsub.svg) ![GitHub license event-pubsub license](https://img.shields.io/github/license/RIAEvangelist/event-pubsub.svg) ![open issues for event-pubsub on GitHub](https://img.shields.io/github/issues/RIAEvangelist/event-pubsub.svg)\n\n***Super light and fast*** Extensible PubSub events and EventEmitters for Node and the browser with support for ES6 by default, and ES5 versions for older verions of node and older IE/Safari versions.\n\nFor older versions of node and io.js the latest versions of `event-pubsub` may work with the --harmony flag. Officially though, we support node v4 and newer with es5 and es6\n\nEasy for any developer level. No frills, just high speed events following the publisher subscriber pattern!\n\n[Pretty GitHub.io site](http://riaevangelist.github.io/event-pubsub/)  \n\n[See NPM stats for event-pubsub](http://npm-stat.com/charts.html?package=event-pubsub&author=&from=&to=)\n\n**EXAMPLE FILES**  \n\n1. [Node Event PubSub Examples](https://github.com/RIAEvangelist/event-pubsub/tree/master/examples/node)  \n2. [Browser Event PubSub Examples](https://github.com/RIAEvangelist/event-pubsub/tree/master/examples/browser)\n\n**Node Install**  \n`npm i --save event-pubsub`  \nBy default the correct version (ES5/ES6) will be included. You can force the es5/6 version by requiring `event-pubsub/es5` or `event-pubsub/es6`.\n\n**Browser Install**  \n*see browser examples above or below*  \n\n```html\n\n<script src='path/to/event-pubsub-browser.js'></script>\n<!-- OR ES5 for older browser support\n    <script src='path/to/event-pubsub-browser-es5.js'></script>\n-->\n\n```\n\n# Methods\n\n|Method|Arguments|Description|\n|------|---------|-----------|\n|subscribe|type (string), handler(function), once (bool/optional)|will bind the `handler` function to the the `type` event. Just like `addEventListener` in the browser. If once is set to true the hander will be removed after being called once.|\n|on|same as above|same as above|\n|once|type (string), handler(function)| will bind the `handler` function to the the `type` event and unbind it after ***one*** execution. Just like `addEventListener` in the browser withe the `once` option set|\n|unSubscribe|type (string), handler(function or *)|will ***un***bind the `handler` function from the the `type` event. If the `handler` is `*`, all handlers for the event type will be removed.   Just like `removeEventListener` in the browser, but also can remove all event handlers for the type.|\n|off|same as above|same as above|\n|publish|type (string), ...data arguments|will call all `handler` functions bound to the event `type` and pass all `...data arguments` to those handlers|\n|emit|same as above|same as above|\n|trigger|same as above|same as above|\n\nWhile `publish`, `subscribe`, and `unSubscribe` are the proper method names for the publisher/subscriber model, we have included `on`, `off`, and `emit` as well because these are the most common event method names, and shorter. We have also kept the `trigger` method as an alias for `publish` and `emit` for backwards compatability with earlier versions of `event-pubsub`.\n\n# The ` * ` type\n\nThe ` * ` type is a special event type that will be triggered by ***any publish or emit*** the handlers for these should expect the first argument to be the type and all arguments after to be data arguments.\n\n\n## Basic Examples\n\n***NOTE - the only difference between node and browser code is how the `events` variable is created***  \n* node ` const events = new Events `\n* browser `const events = new window.EventPubSub;`\n\n#### Node\n\n```javascript\n\n// ES5/ES6 now automatically chosen based on node version\nconst Events = new require('event-pubsub');\nconst events=new Events;\n\nevents.on(\n    'hello',\n    function(data){\n        console.log('hello event recieved ', data);\n        events.emit(\n            'world',\n            {\n                type:'myObject',\n                data:{\n                    x:'YAY, Objects!'\n                }\n            }\n        )\n    }\n);\n\nevents.on(\n    'world',\n    function(data){\n        console.log('World event got',data);\n        events.off('*','*');\n        console.log('Removed all events');\n    }\n);\n\nevents.emit(\n    'hello',\n    'world'\n);\n\n\n\n```\n\n#### Basic Chaining\n\n```javascript\n\nevents.on(\n    'hello',\n    someFunction\n).on(\n    'goodbye',\n    anotherFunction\n).emit(\n    'hello',\n    'world'\n);\n\nevents.emit(\n    'goodbye',\n    'complexity'\n).off(\n    'hello',\n    '*'\n);\n\n```\n\n#### Browser\n##### HTML\n\n```html\n\n\n    <!DOCTYPE html>\n    <html>\n        <head>\n            <title>PubSub Example</title>\n            <script src='../../event-pubsub-browser.js'></script>\n            <!-- OR ES5 for older browser support\n                <script src='../../event-pubsub-browser-es5.js'></script>\n            -->\n            <script src='yourAmazingCode.js'></script>\n        </head>\n        <body>\n            ...\n        </body>\n    </html>\n\n\n```\n\n\n##### Inside Your Amazing Code\n\n\n```javascript\n\nvar events = new window.EventPubSub();\n\nevents.on(\n    'hello',\n    function(data){\n        console.log('hello event recieved ', data);\n        events.emit(\n            'world',\n            {\n                type:'myObject',\n                data:{\n                    x:'YAY, Objects!'\n                }\n            }\n        )\n    }\n);\n\n events.emit(\n     'hello',\n     'world'\n );\n\n events.emit(\n     'hello',\n     'again','and again'\n );\n\n\n```\n\n\n### Basic Event Emitter and/or Extending Event PubSub\n\n```javascript\n\n// ES5/ES6 now automatically chosen based on node version\nconst Events = require('event-pubsub');\n// manually include es6\n// const Events = require('event-pubsub/es6');\n\nclass Book extends Events{\n    constructor(){\n        super();\n        //now Book has .on, .off, and .emit\n\n        this.words=[];\n    }\n\n    add(...words){\n        this.words.push(...words);\n        this.emit(\n            'added',\n            ...words\n        );\n    }\n\n    read(){\n        this.emit(\n            'reading'\n        );\n        console.log(this.words.join(' '));\n    }\n}\n\nconst book=new Book;\n\nbook.on(\n    'added',\n    function(...words){\n        console.log('words added : ',words);\n        this.read();\n    }\n);\n\nbook.add(\n    'once','upon','a','time','in','a','cubicle'\n);\n\n\n```\n\n##### ES5 extention example\n\n```javascript\n\n// manually include es5\nconst Events = require('event-pubsub/es5.js');\n\nfunction Book(){\n    //extend happens below\n    Object.assign(this,new Events);\n    //now Book has .on, .off, and .emit\n\n    this.words=[];\n    this.add=add;\n    this.erase=erase;\n    this.read=read;\n\n    function add(){\n        arguments.slice=Array.prototype.slice;\n\n        this.words=this.words.concat(\n            arguments.slice()\n        );\n        this.emit(\n            'added',\n            arguments.slice()\n        );\n    }\n\n    function read(){\n        this.emit(\n            'reading'\n        );\n        console.log(this.words.join(' '));\n    }\n\n    return this;\n};\n\nconst book=new Book;\n\nbook.on(\n    'added',\n    function(...words){\n        console.log('words added : ',words);\n        this.read();\n    }\n);\n\nbook.add(\n    'once','upon','a','time','in','a','cubicle'\n);\n\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/RIAEvangelist/event-pubsub.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "4.3.0"
}
